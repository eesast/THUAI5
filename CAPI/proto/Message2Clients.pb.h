// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message2Clients.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "MessageType.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Message2Clients_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Message2Clients_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[10]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Message2Clients_2eproto;
namespace Protobuf {
class MessageOfBombedBullet;
struct MessageOfBombedBulletDefaultTypeInternal;
extern MessageOfBombedBulletDefaultTypeInternal _MessageOfBombedBullet_default_instance_;
class MessageOfBullet;
struct MessageOfBulletDefaultTypeInternal;
extern MessageOfBulletDefaultTypeInternal _MessageOfBullet_default_instance_;
class MessageOfCharacter;
struct MessageOfCharacterDefaultTypeInternal;
extern MessageOfCharacterDefaultTypeInternal _MessageOfCharacter_default_instance_;
class MessageOfMap;
struct MessageOfMapDefaultTypeInternal;
extern MessageOfMapDefaultTypeInternal _MessageOfMap_default_instance_;
class MessageOfMap_Row;
struct MessageOfMap_RowDefaultTypeInternal;
extern MessageOfMap_RowDefaultTypeInternal _MessageOfMap_Row_default_instance_;
class MessageOfPickedProp;
struct MessageOfPickedPropDefaultTypeInternal;
extern MessageOfPickedPropDefaultTypeInternal _MessageOfPickedProp_default_instance_;
class MessageOfProp;
struct MessageOfPropDefaultTypeInternal;
extern MessageOfPropDefaultTypeInternal _MessageOfProp_default_instance_;
class MessageToClient;
struct MessageToClientDefaultTypeInternal;
extern MessageToClientDefaultTypeInternal _MessageToClient_default_instance_;
class MessageToClient_GameObjMessage;
struct MessageToClient_GameObjMessageDefaultTypeInternal;
extern MessageToClient_GameObjMessageDefaultTypeInternal _MessageToClient_GameObjMessage_default_instance_;
class MessageToOneClient;
struct MessageToOneClientDefaultTypeInternal;
extern MessageToOneClientDefaultTypeInternal _MessageToOneClient_default_instance_;
}  // namespace Protobuf
PROTOBUF_NAMESPACE_OPEN
template<> ::Protobuf::MessageOfBombedBullet* Arena::CreateMaybeMessage<::Protobuf::MessageOfBombedBullet>(Arena*);
template<> ::Protobuf::MessageOfBullet* Arena::CreateMaybeMessage<::Protobuf::MessageOfBullet>(Arena*);
template<> ::Protobuf::MessageOfCharacter* Arena::CreateMaybeMessage<::Protobuf::MessageOfCharacter>(Arena*);
template<> ::Protobuf::MessageOfMap* Arena::CreateMaybeMessage<::Protobuf::MessageOfMap>(Arena*);
template<> ::Protobuf::MessageOfMap_Row* Arena::CreateMaybeMessage<::Protobuf::MessageOfMap_Row>(Arena*);
template<> ::Protobuf::MessageOfPickedProp* Arena::CreateMaybeMessage<::Protobuf::MessageOfPickedProp>(Arena*);
template<> ::Protobuf::MessageOfProp* Arena::CreateMaybeMessage<::Protobuf::MessageOfProp>(Arena*);
template<> ::Protobuf::MessageToClient* Arena::CreateMaybeMessage<::Protobuf::MessageToClient>(Arena*);
template<> ::Protobuf::MessageToClient_GameObjMessage* Arena::CreateMaybeMessage<::Protobuf::MessageToClient_GameObjMessage>(Arena*);
template<> ::Protobuf::MessageToOneClient* Arena::CreateMaybeMessage<::Protobuf::MessageToOneClient>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Protobuf {

// ===================================================================

class MessageOfCharacter final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protobuf.MessageOfCharacter) */ {
 public:
  inline MessageOfCharacter() : MessageOfCharacter(nullptr) {}
  ~MessageOfCharacter() override;
  explicit constexpr MessageOfCharacter(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfCharacter(const MessageOfCharacter& from);
  MessageOfCharacter(MessageOfCharacter&& from) noexcept
    : MessageOfCharacter() {
    *this = ::std::move(from);
  }

  inline MessageOfCharacter& operator=(const MessageOfCharacter& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfCharacter& operator=(MessageOfCharacter&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfCharacter& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfCharacter* internal_default_instance() {
    return reinterpret_cast<const MessageOfCharacter*>(
               &_MessageOfCharacter_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MessageOfCharacter& a, MessageOfCharacter& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfCharacter* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfCharacter* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfCharacter* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfCharacter>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfCharacter& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MessageOfCharacter& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfCharacter* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protobuf.MessageOfCharacter";
  }
  protected:
  explicit MessageOfCharacter(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBuffFieldNumber = 27,
    kXFieldNumber = 1,
    kYFieldNumber = 2,
    kAttackRangeFieldNumber = 3,
    kBulletNumFieldNumber = 4,
    kSpeedFieldNumber = 5,
    kTimeUntilCommonSkillAvailableFieldNumber = 7,
    kLifeFieldNumber = 6,
    kGemNumFieldNumber = 9,
    kTimeUntilUltimateSkillAvailableFieldNumber = 8,
    kFacingDirectionFieldNumber = 10,
    kPropFieldNumber = 11,
    kPlaceFieldNumber = 12,
    kVampireFieldNumber = 13,
    kBulletTypeFieldNumber = 14,
    kPassiveSkillTypeFieldNumber = 16,
    kGuidFieldNumber = 18,
    kActiveSkillTypeFieldNumber = 17,
    kRadiusFieldNumber = 20,
    kIsResettingFieldNumber = 15,
    kCanMoveFieldNumber = 19,
    kIsInvisibleFieldNumber = 26,
    kCDFieldNumber = 21,
    kLifeNumFieldNumber = 22,
    kScoreFieldNumber = 23,
    kTeamIDFieldNumber = 24,
    kPlayerIDFieldNumber = 25,
  };
  // repeated .Protobuf.BuffType buff = 27;
  int buff_size() const;
  private:
  int _internal_buff_size() const;
  public:
  void clear_buff();
  private:
  ::Protobuf::BuffType _internal_buff(int index) const;
  void _internal_add_buff(::Protobuf::BuffType value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable_buff();
  public:
  ::Protobuf::BuffType buff(int index) const;
  void set_buff(int index, ::Protobuf::BuffType value);
  void add_buff(::Protobuf::BuffType value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& buff() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable_buff();

  // int32 x = 1;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // int32 y = 2;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // double attackRange = 3;
  void clear_attackrange();
  double attackrange() const;
  void set_attackrange(double value);
  private:
  double _internal_attackrange() const;
  void _internal_set_attackrange(double value);
  public:

  // int32 bulletNum = 4;
  void clear_bulletnum();
  int32_t bulletnum() const;
  void set_bulletnum(int32_t value);
  private:
  int32_t _internal_bulletnum() const;
  void _internal_set_bulletnum(int32_t value);
  public:

  // int32 speed = 5;
  void clear_speed();
  int32_t speed() const;
  void set_speed(int32_t value);
  private:
  int32_t _internal_speed() const;
  void _internal_set_speed(int32_t value);
  public:

  // double timeUntilCommonSkillAvailable = 7;
  void clear_timeuntilcommonskillavailable();
  double timeuntilcommonskillavailable() const;
  void set_timeuntilcommonskillavailable(double value);
  private:
  double _internal_timeuntilcommonskillavailable() const;
  void _internal_set_timeuntilcommonskillavailable(double value);
  public:

  // int32 life = 6;
  void clear_life();
  int32_t life() const;
  void set_life(int32_t value);
  private:
  int32_t _internal_life() const;
  void _internal_set_life(int32_t value);
  public:

  // int32 gemNum = 9;
  void clear_gemnum();
  int32_t gemnum() const;
  void set_gemnum(int32_t value);
  private:
  int32_t _internal_gemnum() const;
  void _internal_set_gemnum(int32_t value);
  public:

  // double timeUntilUltimateSkillAvailable = 8;
  void clear_timeuntilultimateskillavailable();
  double timeuntilultimateskillavailable() const;
  void set_timeuntilultimateskillavailable(double value);
  private:
  double _internal_timeuntilultimateskillavailable() const;
  void _internal_set_timeuntilultimateskillavailable(double value);
  public:

  // double facingDirection = 10;
  void clear_facingdirection();
  double facingdirection() const;
  void set_facingdirection(double value);
  private:
  double _internal_facingdirection() const;
  void _internal_set_facingdirection(double value);
  public:

  // .Protobuf.PropType prop = 11;
  void clear_prop();
  ::Protobuf::PropType prop() const;
  void set_prop(::Protobuf::PropType value);
  private:
  ::Protobuf::PropType _internal_prop() const;
  void _internal_set_prop(::Protobuf::PropType value);
  public:

  // .Protobuf.PlaceType place = 12;
  void clear_place();
  ::Protobuf::PlaceType place() const;
  void set_place(::Protobuf::PlaceType value);
  private:
  ::Protobuf::PlaceType _internal_place() const;
  void _internal_set_place(::Protobuf::PlaceType value);
  public:

  // double vampire = 13;
  void clear_vampire();
  double vampire() const;
  void set_vampire(double value);
  private:
  double _internal_vampire() const;
  void _internal_set_vampire(double value);
  public:

  // .Protobuf.BulletType bulletType = 14;
  void clear_bullettype();
  ::Protobuf::BulletType bullettype() const;
  void set_bullettype(::Protobuf::BulletType value);
  private:
  ::Protobuf::BulletType _internal_bullettype() const;
  void _internal_set_bullettype(::Protobuf::BulletType value);
  public:

  // .Protobuf.PassiveSkillType PassiveSkillType = 16;
  void clear_passiveskilltype();
  ::Protobuf::PassiveSkillType passiveskilltype() const;
  void set_passiveskilltype(::Protobuf::PassiveSkillType value);
  private:
  ::Protobuf::PassiveSkillType _internal_passiveskilltype() const;
  void _internal_set_passiveskilltype(::Protobuf::PassiveSkillType value);
  public:

  // int64 guid = 18;
  void clear_guid();
  int64_t guid() const;
  void set_guid(int64_t value);
  private:
  int64_t _internal_guid() const;
  void _internal_set_guid(int64_t value);
  public:

  // .Protobuf.ActiveSkillType ActiveSkillType = 17;
  void clear_activeskilltype();
  ::Protobuf::ActiveSkillType activeskilltype() const;
  void set_activeskilltype(::Protobuf::ActiveSkillType value);
  private:
  ::Protobuf::ActiveSkillType _internal_activeskilltype() const;
  void _internal_set_activeskilltype(::Protobuf::ActiveSkillType value);
  public:

  // int32 radius = 20;
  void clear_radius();
  int32_t radius() const;
  void set_radius(int32_t value);
  private:
  int32_t _internal_radius() const;
  void _internal_set_radius(int32_t value);
  public:

  // bool isResetting = 15;
  void clear_isresetting();
  bool isresetting() const;
  void set_isresetting(bool value);
  private:
  bool _internal_isresetting() const;
  void _internal_set_isresetting(bool value);
  public:

  // bool canMove = 19;
  void clear_canmove();
  bool canmove() const;
  void set_canmove(bool value);
  private:
  bool _internal_canmove() const;
  void _internal_set_canmove(bool value);
  public:

  // bool isInvisible = 26;
  void clear_isinvisible();
  bool isinvisible() const;
  void set_isinvisible(bool value);
  private:
  bool _internal_isinvisible() const;
  void _internal_set_isinvisible(bool value);
  public:

  // int32 CD = 21;
  void clear_cd();
  int32_t cd() const;
  void set_cd(int32_t value);
  private:
  int32_t _internal_cd() const;
  void _internal_set_cd(int32_t value);
  public:

  // int32 lifeNum = 22;
  void clear_lifenum();
  int32_t lifenum() const;
  void set_lifenum(int32_t value);
  private:
  int32_t _internal_lifenum() const;
  void _internal_set_lifenum(int32_t value);
  public:

  // int32 score = 23;
  void clear_score();
  int32_t score() const;
  void set_score(int32_t value);
  private:
  int32_t _internal_score() const;
  void _internal_set_score(int32_t value);
  public:

  // int64 teamID = 24;
  void clear_teamid();
  int64_t teamid() const;
  void set_teamid(int64_t value);
  private:
  int64_t _internal_teamid() const;
  void _internal_set_teamid(int64_t value);
  public:

  // int64 playerID = 25;
  void clear_playerid();
  int64_t playerid() const;
  void set_playerid(int64_t value);
  private:
  int64_t _internal_playerid() const;
  void _internal_set_playerid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:Protobuf.MessageOfCharacter)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> buff_;
  mutable std::atomic<int> _buff_cached_byte_size_;
  int32_t x_;
  int32_t y_;
  double attackrange_;
  int32_t bulletnum_;
  int32_t speed_;
  double timeuntilcommonskillavailable_;
  int32_t life_;
  int32_t gemnum_;
  double timeuntilultimateskillavailable_;
  double facingdirection_;
  int prop_;
  int place_;
  double vampire_;
  int bullettype_;
  int passiveskilltype_;
  int64_t guid_;
  int activeskilltype_;
  int32_t radius_;
  bool isresetting_;
  bool canmove_;
  bool isinvisible_;
  int32_t cd_;
  int32_t lifenum_;
  int32_t score_;
  int64_t teamid_;
  int64_t playerid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfProp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protobuf.MessageOfProp) */ {
 public:
  inline MessageOfProp() : MessageOfProp(nullptr) {}
  ~MessageOfProp() override;
  explicit constexpr MessageOfProp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfProp(const MessageOfProp& from);
  MessageOfProp(MessageOfProp&& from) noexcept
    : MessageOfProp() {
    *this = ::std::move(from);
  }

  inline MessageOfProp& operator=(const MessageOfProp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfProp& operator=(MessageOfProp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfProp& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfProp* internal_default_instance() {
    return reinterpret_cast<const MessageOfProp*>(
               &_MessageOfProp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(MessageOfProp& a, MessageOfProp& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfProp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfProp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfProp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfProp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfProp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MessageOfProp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfProp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protobuf.MessageOfProp";
  }
  protected:
  explicit MessageOfProp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kXFieldNumber = 2,
    kFacingDirectionFieldNumber = 4,
    kYFieldNumber = 3,
    kSizeFieldNumber = 6,
    kGuidFieldNumber = 5,
    kPlaceFieldNumber = 7,
    kIsMovingFieldNumber = 8,
  };
  // .Protobuf.PropType type = 1;
  void clear_type();
  ::Protobuf::PropType type() const;
  void set_type(::Protobuf::PropType value);
  private:
  ::Protobuf::PropType _internal_type() const;
  void _internal_set_type(::Protobuf::PropType value);
  public:

  // int32 x = 2;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // double facingDirection = 4;
  void clear_facingdirection();
  double facingdirection() const;
  void set_facingdirection(double value);
  private:
  double _internal_facingdirection() const;
  void _internal_set_facingdirection(double value);
  public:

  // int32 y = 3;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // int32 size = 6;
  void clear_size();
  int32_t size() const;
  void set_size(int32_t value);
  private:
  int32_t _internal_size() const;
  void _internal_set_size(int32_t value);
  public:

  // int64 guid = 5;
  void clear_guid();
  int64_t guid() const;
  void set_guid(int64_t value);
  private:
  int64_t _internal_guid() const;
  void _internal_set_guid(int64_t value);
  public:

  // .Protobuf.PlaceType place = 7;
  void clear_place();
  ::Protobuf::PlaceType place() const;
  void set_place(::Protobuf::PlaceType value);
  private:
  ::Protobuf::PlaceType _internal_place() const;
  void _internal_set_place(::Protobuf::PlaceType value);
  public:

  // bool isMoving = 8;
  void clear_ismoving();
  bool ismoving() const;
  void set_ismoving(bool value);
  private:
  bool _internal_ismoving() const;
  void _internal_set_ismoving(bool value);
  public:

  // @@protoc_insertion_point(class_scope:Protobuf.MessageOfProp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int type_;
  int32_t x_;
  double facingdirection_;
  int32_t y_;
  int32_t size_;
  int64_t guid_;
  int place_;
  bool ismoving_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfBullet final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protobuf.MessageOfBullet) */ {
 public:
  inline MessageOfBullet() : MessageOfBullet(nullptr) {}
  ~MessageOfBullet() override;
  explicit constexpr MessageOfBullet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfBullet(const MessageOfBullet& from);
  MessageOfBullet(MessageOfBullet&& from) noexcept
    : MessageOfBullet() {
    *this = ::std::move(from);
  }

  inline MessageOfBullet& operator=(const MessageOfBullet& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfBullet& operator=(MessageOfBullet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfBullet& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfBullet* internal_default_instance() {
    return reinterpret_cast<const MessageOfBullet*>(
               &_MessageOfBullet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MessageOfBullet& a, MessageOfBullet& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfBullet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfBullet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfBullet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfBullet>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfBullet& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MessageOfBullet& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfBullet* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protobuf.MessageOfBullet";
  }
  protected:
  explicit MessageOfBullet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kXFieldNumber = 2,
    kFacingDirectionFieldNumber = 4,
    kGuidFieldNumber = 5,
    kYFieldNumber = 3,
    kPlaceFieldNumber = 7,
    kParentTeamIDFieldNumber = 6,
    kBombRangeFieldNumber = 8,
  };
  // .Protobuf.BulletType type = 1;
  void clear_type();
  ::Protobuf::BulletType type() const;
  void set_type(::Protobuf::BulletType value);
  private:
  ::Protobuf::BulletType _internal_type() const;
  void _internal_set_type(::Protobuf::BulletType value);
  public:

  // int32 x = 2;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // double facingDirection = 4;
  void clear_facingdirection();
  double facingdirection() const;
  void set_facingdirection(double value);
  private:
  double _internal_facingdirection() const;
  void _internal_set_facingdirection(double value);
  public:

  // int64 guid = 5;
  void clear_guid();
  int64_t guid() const;
  void set_guid(int64_t value);
  private:
  int64_t _internal_guid() const;
  void _internal_set_guid(int64_t value);
  public:

  // int32 y = 3;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // .Protobuf.PlaceType place = 7;
  void clear_place();
  ::Protobuf::PlaceType place() const;
  void set_place(::Protobuf::PlaceType value);
  private:
  ::Protobuf::PlaceType _internal_place() const;
  void _internal_set_place(::Protobuf::PlaceType value);
  public:

  // int64 parentTeamID = 6;
  void clear_parentteamid();
  int64_t parentteamid() const;
  void set_parentteamid(int64_t value);
  private:
  int64_t _internal_parentteamid() const;
  void _internal_set_parentteamid(int64_t value);
  public:

  // double bombRange = 8;
  void clear_bombrange();
  double bombrange() const;
  void set_bombrange(double value);
  private:
  double _internal_bombrange() const;
  void _internal_set_bombrange(double value);
  public:

  // @@protoc_insertion_point(class_scope:Protobuf.MessageOfBullet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int type_;
  int32_t x_;
  double facingdirection_;
  int64_t guid_;
  int32_t y_;
  int place_;
  int64_t parentteamid_;
  double bombrange_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfBombedBullet final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protobuf.MessageOfBombedBullet) */ {
 public:
  inline MessageOfBombedBullet() : MessageOfBombedBullet(nullptr) {}
  ~MessageOfBombedBullet() override;
  explicit constexpr MessageOfBombedBullet(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfBombedBullet(const MessageOfBombedBullet& from);
  MessageOfBombedBullet(MessageOfBombedBullet&& from) noexcept
    : MessageOfBombedBullet() {
    *this = ::std::move(from);
  }

  inline MessageOfBombedBullet& operator=(const MessageOfBombedBullet& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfBombedBullet& operator=(MessageOfBombedBullet&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfBombedBullet& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfBombedBullet* internal_default_instance() {
    return reinterpret_cast<const MessageOfBombedBullet*>(
               &_MessageOfBombedBullet_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MessageOfBombedBullet& a, MessageOfBombedBullet& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfBombedBullet* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfBombedBullet* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfBombedBullet* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfBombedBullet>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfBombedBullet& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MessageOfBombedBullet& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfBombedBullet* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protobuf.MessageOfBombedBullet";
  }
  protected:
  explicit MessageOfBombedBullet(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kXFieldNumber = 2,
    kFacingDirectionFieldNumber = 4,
    kMappingIDFieldNumber = 5,
    kBombRangeFieldNumber = 6,
    kYFieldNumber = 3,
  };
  // .Protobuf.BulletType type = 1;
  void clear_type();
  ::Protobuf::BulletType type() const;
  void set_type(::Protobuf::BulletType value);
  private:
  ::Protobuf::BulletType _internal_type() const;
  void _internal_set_type(::Protobuf::BulletType value);
  public:

  // int32 x = 2;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // double facingDirection = 4;
  void clear_facingdirection();
  double facingdirection() const;
  void set_facingdirection(double value);
  private:
  double _internal_facingdirection() const;
  void _internal_set_facingdirection(double value);
  public:

  // int64 mappingID = 5;
  void clear_mappingid();
  int64_t mappingid() const;
  void set_mappingid(int64_t value);
  private:
  int64_t _internal_mappingid() const;
  void _internal_set_mappingid(int64_t value);
  public:

  // double bombRange = 6;
  void clear_bombrange();
  double bombrange() const;
  void set_bombrange(double value);
  private:
  double _internal_bombrange() const;
  void _internal_set_bombrange(double value);
  public:

  // int32 y = 3;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Protobuf.MessageOfBombedBullet)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int type_;
  int32_t x_;
  double facingdirection_;
  int64_t mappingid_;
  double bombrange_;
  int32_t y_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfPickedProp final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protobuf.MessageOfPickedProp) */ {
 public:
  inline MessageOfPickedProp() : MessageOfPickedProp(nullptr) {}
  ~MessageOfPickedProp() override;
  explicit constexpr MessageOfPickedProp(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfPickedProp(const MessageOfPickedProp& from);
  MessageOfPickedProp(MessageOfPickedProp&& from) noexcept
    : MessageOfPickedProp() {
    *this = ::std::move(from);
  }

  inline MessageOfPickedProp& operator=(const MessageOfPickedProp& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfPickedProp& operator=(MessageOfPickedProp&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfPickedProp& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfPickedProp* internal_default_instance() {
    return reinterpret_cast<const MessageOfPickedProp*>(
               &_MessageOfPickedProp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(MessageOfPickedProp& a, MessageOfPickedProp& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfPickedProp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfPickedProp* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfPickedProp* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfPickedProp>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfPickedProp& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MessageOfPickedProp& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfPickedProp* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protobuf.MessageOfPickedProp";
  }
  protected:
  explicit MessageOfPickedProp(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kXFieldNumber = 2,
    kFacingDirectionFieldNumber = 4,
    kMappingIDFieldNumber = 5,
    kYFieldNumber = 3,
  };
  // .Protobuf.PropType type = 1;
  void clear_type();
  ::Protobuf::PropType type() const;
  void set_type(::Protobuf::PropType value);
  private:
  ::Protobuf::PropType _internal_type() const;
  void _internal_set_type(::Protobuf::PropType value);
  public:

  // int32 x = 2;
  void clear_x();
  int32_t x() const;
  void set_x(int32_t value);
  private:
  int32_t _internal_x() const;
  void _internal_set_x(int32_t value);
  public:

  // double facingDirection = 4;
  void clear_facingdirection();
  double facingdirection() const;
  void set_facingdirection(double value);
  private:
  double _internal_facingdirection() const;
  void _internal_set_facingdirection(double value);
  public:

  // int64 mappingID = 5;
  void clear_mappingid();
  int64_t mappingid() const;
  void set_mappingid(int64_t value);
  private:
  int64_t _internal_mappingid() const;
  void _internal_set_mappingid(int64_t value);
  public:

  // int32 y = 3;
  void clear_y();
  int32_t y() const;
  void set_y(int32_t value);
  private:
  int32_t _internal_y() const;
  void _internal_set_y(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:Protobuf.MessageOfPickedProp)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int type_;
  int32_t x_;
  double facingdirection_;
  int64_t mappingid_;
  int32_t y_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfMap_Row final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protobuf.MessageOfMap.Row) */ {
 public:
  inline MessageOfMap_Row() : MessageOfMap_Row(nullptr) {}
  ~MessageOfMap_Row() override;
  explicit constexpr MessageOfMap_Row(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfMap_Row(const MessageOfMap_Row& from);
  MessageOfMap_Row(MessageOfMap_Row&& from) noexcept
    : MessageOfMap_Row() {
    *this = ::std::move(from);
  }

  inline MessageOfMap_Row& operator=(const MessageOfMap_Row& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfMap_Row& operator=(MessageOfMap_Row&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfMap_Row& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfMap_Row* internal_default_instance() {
    return reinterpret_cast<const MessageOfMap_Row*>(
               &_MessageOfMap_Row_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(MessageOfMap_Row& a, MessageOfMap_Row& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfMap_Row* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfMap_Row* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfMap_Row* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfMap_Row>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfMap_Row& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MessageOfMap_Row& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfMap_Row* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protobuf.MessageOfMap.Row";
  }
  protected:
  explicit MessageOfMap_Row(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kColFieldNumber = 1,
  };
  // repeated int32 col = 1;
  int col_size() const;
  private:
  int _internal_col_size() const;
  public:
  void clear_col();
  private:
  int32_t _internal_col(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      _internal_col() const;
  void _internal_add_col(int32_t value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      _internal_mutable_col();
  public:
  int32_t col(int index) const;
  void set_col(int index, int32_t value);
  void add_col(int32_t value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
      col() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
      mutable_col();

  // @@protoc_insertion_point(class_scope:Protobuf.MessageOfMap.Row)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t > col_;
  mutable std::atomic<int> _col_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageOfMap final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protobuf.MessageOfMap) */ {
 public:
  inline MessageOfMap() : MessageOfMap(nullptr) {}
  ~MessageOfMap() override;
  explicit constexpr MessageOfMap(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageOfMap(const MessageOfMap& from);
  MessageOfMap(MessageOfMap&& from) noexcept
    : MessageOfMap() {
    *this = ::std::move(from);
  }

  inline MessageOfMap& operator=(const MessageOfMap& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageOfMap& operator=(MessageOfMap&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageOfMap& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageOfMap* internal_default_instance() {
    return reinterpret_cast<const MessageOfMap*>(
               &_MessageOfMap_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(MessageOfMap& a, MessageOfMap& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageOfMap* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageOfMap* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageOfMap* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageOfMap>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageOfMap& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MessageOfMap& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageOfMap* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protobuf.MessageOfMap";
  }
  protected:
  explicit MessageOfMap(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MessageOfMap_Row Row;

  // accessors -------------------------------------------------------

  enum : int {
    kRowFieldNumber = 51,
  };
  // repeated .Protobuf.MessageOfMap.Row row = 51;
  int row_size() const;
  private:
  int _internal_row_size() const;
  public:
  void clear_row();
  ::Protobuf::MessageOfMap_Row* mutable_row(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Protobuf::MessageOfMap_Row >*
      mutable_row();
  private:
  const ::Protobuf::MessageOfMap_Row& _internal_row(int index) const;
  ::Protobuf::MessageOfMap_Row* _internal_add_row();
  public:
  const ::Protobuf::MessageOfMap_Row& row(int index) const;
  ::Protobuf::MessageOfMap_Row* add_row();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Protobuf::MessageOfMap_Row >&
      row() const;

  // @@protoc_insertion_point(class_scope:Protobuf.MessageOfMap)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Protobuf::MessageOfMap_Row > row_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageToClient_GameObjMessage final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protobuf.MessageToClient.GameObjMessage) */ {
 public:
  inline MessageToClient_GameObjMessage() : MessageToClient_GameObjMessage(nullptr) {}
  ~MessageToClient_GameObjMessage() override;
  explicit constexpr MessageToClient_GameObjMessage(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageToClient_GameObjMessage(const MessageToClient_GameObjMessage& from);
  MessageToClient_GameObjMessage(MessageToClient_GameObjMessage&& from) noexcept
    : MessageToClient_GameObjMessage() {
    *this = ::std::move(from);
  }

  inline MessageToClient_GameObjMessage& operator=(const MessageToClient_GameObjMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageToClient_GameObjMessage& operator=(MessageToClient_GameObjMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageToClient_GameObjMessage& default_instance() {
    return *internal_default_instance();
  }
  enum ObjCase {
    kMessageOfCharacter = 1,
    kMessageOfBullet = 2,
    kMessageOfProp = 3,
    kMessageOfMap = 4,
    kMessageOfBombedBullet = 5,
    kMessageOfPickedProp = 6,
    OBJ_NOT_SET = 0,
  };

  static inline const MessageToClient_GameObjMessage* internal_default_instance() {
    return reinterpret_cast<const MessageToClient_GameObjMessage*>(
               &_MessageToClient_GameObjMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(MessageToClient_GameObjMessage& a, MessageToClient_GameObjMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageToClient_GameObjMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageToClient_GameObjMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageToClient_GameObjMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageToClient_GameObjMessage>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageToClient_GameObjMessage& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MessageToClient_GameObjMessage& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageToClient_GameObjMessage* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protobuf.MessageToClient.GameObjMessage";
  }
  protected:
  explicit MessageToClient_GameObjMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageOfCharacterFieldNumber = 1,
    kMessageOfBulletFieldNumber = 2,
    kMessageOfPropFieldNumber = 3,
    kMessageOfMapFieldNumber = 4,
    kMessageOfBombedBulletFieldNumber = 5,
    kMessageOfPickedPropFieldNumber = 6,
  };
  // .Protobuf.MessageOfCharacter messageOfCharacter = 1;
  bool has_messageofcharacter() const;
  private:
  bool _internal_has_messageofcharacter() const;
  public:
  void clear_messageofcharacter();
  const ::Protobuf::MessageOfCharacter& messageofcharacter() const;
  PROTOBUF_NODISCARD ::Protobuf::MessageOfCharacter* release_messageofcharacter();
  ::Protobuf::MessageOfCharacter* mutable_messageofcharacter();
  void set_allocated_messageofcharacter(::Protobuf::MessageOfCharacter* messageofcharacter);
  private:
  const ::Protobuf::MessageOfCharacter& _internal_messageofcharacter() const;
  ::Protobuf::MessageOfCharacter* _internal_mutable_messageofcharacter();
  public:
  void unsafe_arena_set_allocated_messageofcharacter(
      ::Protobuf::MessageOfCharacter* messageofcharacter);
  ::Protobuf::MessageOfCharacter* unsafe_arena_release_messageofcharacter();

  // .Protobuf.MessageOfBullet messageOfBullet = 2;
  bool has_messageofbullet() const;
  private:
  bool _internal_has_messageofbullet() const;
  public:
  void clear_messageofbullet();
  const ::Protobuf::MessageOfBullet& messageofbullet() const;
  PROTOBUF_NODISCARD ::Protobuf::MessageOfBullet* release_messageofbullet();
  ::Protobuf::MessageOfBullet* mutable_messageofbullet();
  void set_allocated_messageofbullet(::Protobuf::MessageOfBullet* messageofbullet);
  private:
  const ::Protobuf::MessageOfBullet& _internal_messageofbullet() const;
  ::Protobuf::MessageOfBullet* _internal_mutable_messageofbullet();
  public:
  void unsafe_arena_set_allocated_messageofbullet(
      ::Protobuf::MessageOfBullet* messageofbullet);
  ::Protobuf::MessageOfBullet* unsafe_arena_release_messageofbullet();

  // .Protobuf.MessageOfProp messageOfProp = 3;
  bool has_messageofprop() const;
  private:
  bool _internal_has_messageofprop() const;
  public:
  void clear_messageofprop();
  const ::Protobuf::MessageOfProp& messageofprop() const;
  PROTOBUF_NODISCARD ::Protobuf::MessageOfProp* release_messageofprop();
  ::Protobuf::MessageOfProp* mutable_messageofprop();
  void set_allocated_messageofprop(::Protobuf::MessageOfProp* messageofprop);
  private:
  const ::Protobuf::MessageOfProp& _internal_messageofprop() const;
  ::Protobuf::MessageOfProp* _internal_mutable_messageofprop();
  public:
  void unsafe_arena_set_allocated_messageofprop(
      ::Protobuf::MessageOfProp* messageofprop);
  ::Protobuf::MessageOfProp* unsafe_arena_release_messageofprop();

  // .Protobuf.MessageOfMap messageOfMap = 4;
  bool has_messageofmap() const;
  private:
  bool _internal_has_messageofmap() const;
  public:
  void clear_messageofmap();
  const ::Protobuf::MessageOfMap& messageofmap() const;
  PROTOBUF_NODISCARD ::Protobuf::MessageOfMap* release_messageofmap();
  ::Protobuf::MessageOfMap* mutable_messageofmap();
  void set_allocated_messageofmap(::Protobuf::MessageOfMap* messageofmap);
  private:
  const ::Protobuf::MessageOfMap& _internal_messageofmap() const;
  ::Protobuf::MessageOfMap* _internal_mutable_messageofmap();
  public:
  void unsafe_arena_set_allocated_messageofmap(
      ::Protobuf::MessageOfMap* messageofmap);
  ::Protobuf::MessageOfMap* unsafe_arena_release_messageofmap();

  // .Protobuf.MessageOfBombedBullet MessageOfBombedBullet = 5;
  bool has_messageofbombedbullet() const;
  private:
  bool _internal_has_messageofbombedbullet() const;
  public:
  void clear_messageofbombedbullet();
  const ::Protobuf::MessageOfBombedBullet& messageofbombedbullet() const;
  PROTOBUF_NODISCARD ::Protobuf::MessageOfBombedBullet* release_messageofbombedbullet();
  ::Protobuf::MessageOfBombedBullet* mutable_messageofbombedbullet();
  void set_allocated_messageofbombedbullet(::Protobuf::MessageOfBombedBullet* messageofbombedbullet);
  private:
  const ::Protobuf::MessageOfBombedBullet& _internal_messageofbombedbullet() const;
  ::Protobuf::MessageOfBombedBullet* _internal_mutable_messageofbombedbullet();
  public:
  void unsafe_arena_set_allocated_messageofbombedbullet(
      ::Protobuf::MessageOfBombedBullet* messageofbombedbullet);
  ::Protobuf::MessageOfBombedBullet* unsafe_arena_release_messageofbombedbullet();

  // .Protobuf.MessageOfPickedProp messageOfPickedProp = 6;
  bool has_messageofpickedprop() const;
  private:
  bool _internal_has_messageofpickedprop() const;
  public:
  void clear_messageofpickedprop();
  const ::Protobuf::MessageOfPickedProp& messageofpickedprop() const;
  PROTOBUF_NODISCARD ::Protobuf::MessageOfPickedProp* release_messageofpickedprop();
  ::Protobuf::MessageOfPickedProp* mutable_messageofpickedprop();
  void set_allocated_messageofpickedprop(::Protobuf::MessageOfPickedProp* messageofpickedprop);
  private:
  const ::Protobuf::MessageOfPickedProp& _internal_messageofpickedprop() const;
  ::Protobuf::MessageOfPickedProp* _internal_mutable_messageofpickedprop();
  public:
  void unsafe_arena_set_allocated_messageofpickedprop(
      ::Protobuf::MessageOfPickedProp* messageofpickedprop);
  ::Protobuf::MessageOfPickedProp* unsafe_arena_release_messageofpickedprop();

  void clear_obj();
  ObjCase obj_case() const;
  // @@protoc_insertion_point(class_scope:Protobuf.MessageToClient.GameObjMessage)
 private:
  class _Internal;
  void set_has_messageofcharacter();
  void set_has_messageofbullet();
  void set_has_messageofprop();
  void set_has_messageofmap();
  void set_has_messageofbombedbullet();
  void set_has_messageofpickedprop();

  inline bool has_obj() const;
  inline void clear_has_obj();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  union ObjUnion {
    constexpr ObjUnion() : _constinit_{} {}
      ::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized _constinit_;
    ::Protobuf::MessageOfCharacter* messageofcharacter_;
    ::Protobuf::MessageOfBullet* messageofbullet_;
    ::Protobuf::MessageOfProp* messageofprop_;
    ::Protobuf::MessageOfMap* messageofmap_;
    ::Protobuf::MessageOfBombedBullet* messageofbombedbullet_;
    ::Protobuf::MessageOfPickedProp* messageofpickedprop_;
  } obj_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  uint32_t _oneof_case_[1];

  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageToClient final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protobuf.MessageToClient) */ {
 public:
  inline MessageToClient() : MessageToClient(nullptr) {}
  ~MessageToClient() override;
  explicit constexpr MessageToClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageToClient(const MessageToClient& from);
  MessageToClient(MessageToClient&& from) noexcept
    : MessageToClient() {
    *this = ::std::move(from);
  }

  inline MessageToClient& operator=(const MessageToClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageToClient& operator=(MessageToClient&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageToClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageToClient* internal_default_instance() {
    return reinterpret_cast<const MessageToClient*>(
               &_MessageToClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(MessageToClient& a, MessageToClient& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageToClient* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageToClient* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageToClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageToClient>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageToClient& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MessageToClient& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageToClient* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protobuf.MessageToClient";
  }
  protected:
  explicit MessageToClient(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef MessageToClient_GameObjMessage GameObjMessage;

  // accessors -------------------------------------------------------

  enum : int {
    kGameObjMessageFieldNumber = 1,
    kMessageTypeFieldNumber = 2,
  };
  // repeated .Protobuf.MessageToClient.GameObjMessage gameObjMessage = 1;
  int gameobjmessage_size() const;
  private:
  int _internal_gameobjmessage_size() const;
  public:
  void clear_gameobjmessage();
  ::Protobuf::MessageToClient_GameObjMessage* mutable_gameobjmessage(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Protobuf::MessageToClient_GameObjMessage >*
      mutable_gameobjmessage();
  private:
  const ::Protobuf::MessageToClient_GameObjMessage& _internal_gameobjmessage(int index) const;
  ::Protobuf::MessageToClient_GameObjMessage* _internal_add_gameobjmessage();
  public:
  const ::Protobuf::MessageToClient_GameObjMessage& gameobjmessage(int index) const;
  ::Protobuf::MessageToClient_GameObjMessage* add_gameobjmessage();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Protobuf::MessageToClient_GameObjMessage >&
      gameobjmessage() const;

  // .Protobuf.MessageType messageType = 2;
  void clear_messagetype();
  ::Protobuf::MessageType messagetype() const;
  void set_messagetype(::Protobuf::MessageType value);
  private:
  ::Protobuf::MessageType _internal_messagetype() const;
  void _internal_set_messagetype(::Protobuf::MessageType value);
  public:

  // @@protoc_insertion_point(class_scope:Protobuf.MessageToClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Protobuf::MessageToClient_GameObjMessage > gameobjmessage_;
  int messagetype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// -------------------------------------------------------------------

class MessageToOneClient final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Protobuf.MessageToOneClient) */ {
 public:
  inline MessageToOneClient() : MessageToOneClient(nullptr) {}
  ~MessageToOneClient() override;
  explicit constexpr MessageToOneClient(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  MessageToOneClient(const MessageToOneClient& from);
  MessageToOneClient(MessageToOneClient&& from) noexcept
    : MessageToOneClient() {
    *this = ::std::move(from);
  }

  inline MessageToOneClient& operator=(const MessageToOneClient& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageToOneClient& operator=(MessageToOneClient&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MessageToOneClient& default_instance() {
    return *internal_default_instance();
  }
  static inline const MessageToOneClient* internal_default_instance() {
    return reinterpret_cast<const MessageToOneClient*>(
               &_MessageToOneClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(MessageToOneClient& a, MessageToOneClient& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageToOneClient* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MessageToOneClient* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MessageToOneClient* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<MessageToOneClient>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const MessageToOneClient& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const MessageToOneClient& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageToOneClient* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Protobuf.MessageToOneClient";
  }
  protected:
  explicit MessageToOneClient(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMessageFieldNumber = 5,
    kPlayerIDFieldNumber = 1,
    kTeamIDFieldNumber = 2,
    kGuidFieldNumber = 4,
    kMessageTypeFieldNumber = 3,
  };
  // string message = 5;
  void clear_message();
  const std::string& message() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_message(ArgT0&& arg0, ArgT... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* message);
  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(const std::string& value);
  std::string* _internal_mutable_message();
  public:

  // int64 playerID = 1;
  void clear_playerid();
  int64_t playerid() const;
  void set_playerid(int64_t value);
  private:
  int64_t _internal_playerid() const;
  void _internal_set_playerid(int64_t value);
  public:

  // int64 teamID = 2;
  void clear_teamid();
  int64_t teamid() const;
  void set_teamid(int64_t value);
  private:
  int64_t _internal_teamid() const;
  void _internal_set_teamid(int64_t value);
  public:

  // int64 guid = 4;
  void clear_guid();
  int64_t guid() const;
  void set_guid(int64_t value);
  private:
  int64_t _internal_guid() const;
  void _internal_set_guid(int64_t value);
  public:

  // .Protobuf.MessageType messageType = 3;
  void clear_messagetype();
  ::Protobuf::MessageType messagetype() const;
  void set_messagetype(::Protobuf::MessageType value);
  private:
  ::Protobuf::MessageType _internal_messagetype() const;
  void _internal_set_messagetype(::Protobuf::MessageType value);
  public:

  // @@protoc_insertion_point(class_scope:Protobuf.MessageToOneClient)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr message_;
  int64_t playerid_;
  int64_t teamid_;
  int64_t guid_;
  int messagetype_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Message2Clients_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MessageOfCharacter

// int32 x = 1;
inline void MessageOfCharacter::clear_x() {
  x_ = 0;
}
inline int32_t MessageOfCharacter::_internal_x() const {
  return x_;
}
inline int32_t MessageOfCharacter::x() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.x)
  return _internal_x();
}
inline void MessageOfCharacter::_internal_set_x(int32_t value) {
  
  x_ = value;
}
inline void MessageOfCharacter::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.x)
}

// int32 y = 2;
inline void MessageOfCharacter::clear_y() {
  y_ = 0;
}
inline int32_t MessageOfCharacter::_internal_y() const {
  return y_;
}
inline int32_t MessageOfCharacter::y() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.y)
  return _internal_y();
}
inline void MessageOfCharacter::_internal_set_y(int32_t value) {
  
  y_ = value;
}
inline void MessageOfCharacter::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.y)
}

// double attackRange = 3;
inline void MessageOfCharacter::clear_attackrange() {
  attackrange_ = 0;
}
inline double MessageOfCharacter::_internal_attackrange() const {
  return attackrange_;
}
inline double MessageOfCharacter::attackrange() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.attackRange)
  return _internal_attackrange();
}
inline void MessageOfCharacter::_internal_set_attackrange(double value) {
  
  attackrange_ = value;
}
inline void MessageOfCharacter::set_attackrange(double value) {
  _internal_set_attackrange(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.attackRange)
}

// int32 bulletNum = 4;
inline void MessageOfCharacter::clear_bulletnum() {
  bulletnum_ = 0;
}
inline int32_t MessageOfCharacter::_internal_bulletnum() const {
  return bulletnum_;
}
inline int32_t MessageOfCharacter::bulletnum() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.bulletNum)
  return _internal_bulletnum();
}
inline void MessageOfCharacter::_internal_set_bulletnum(int32_t value) {
  
  bulletnum_ = value;
}
inline void MessageOfCharacter::set_bulletnum(int32_t value) {
  _internal_set_bulletnum(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.bulletNum)
}

// int32 speed = 5;
inline void MessageOfCharacter::clear_speed() {
  speed_ = 0;
}
inline int32_t MessageOfCharacter::_internal_speed() const {
  return speed_;
}
inline int32_t MessageOfCharacter::speed() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.speed)
  return _internal_speed();
}
inline void MessageOfCharacter::_internal_set_speed(int32_t value) {
  
  speed_ = value;
}
inline void MessageOfCharacter::set_speed(int32_t value) {
  _internal_set_speed(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.speed)
}

// int32 life = 6;
inline void MessageOfCharacter::clear_life() {
  life_ = 0;
}
inline int32_t MessageOfCharacter::_internal_life() const {
  return life_;
}
inline int32_t MessageOfCharacter::life() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.life)
  return _internal_life();
}
inline void MessageOfCharacter::_internal_set_life(int32_t value) {
  
  life_ = value;
}
inline void MessageOfCharacter::set_life(int32_t value) {
  _internal_set_life(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.life)
}

// double timeUntilCommonSkillAvailable = 7;
inline void MessageOfCharacter::clear_timeuntilcommonskillavailable() {
  timeuntilcommonskillavailable_ = 0;
}
inline double MessageOfCharacter::_internal_timeuntilcommonskillavailable() const {
  return timeuntilcommonskillavailable_;
}
inline double MessageOfCharacter::timeuntilcommonskillavailable() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.timeUntilCommonSkillAvailable)
  return _internal_timeuntilcommonskillavailable();
}
inline void MessageOfCharacter::_internal_set_timeuntilcommonskillavailable(double value) {
  
  timeuntilcommonskillavailable_ = value;
}
inline void MessageOfCharacter::set_timeuntilcommonskillavailable(double value) {
  _internal_set_timeuntilcommonskillavailable(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.timeUntilCommonSkillAvailable)
}

// double timeUntilUltimateSkillAvailable = 8;
inline void MessageOfCharacter::clear_timeuntilultimateskillavailable() {
  timeuntilultimateskillavailable_ = 0;
}
inline double MessageOfCharacter::_internal_timeuntilultimateskillavailable() const {
  return timeuntilultimateskillavailable_;
}
inline double MessageOfCharacter::timeuntilultimateskillavailable() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.timeUntilUltimateSkillAvailable)
  return _internal_timeuntilultimateskillavailable();
}
inline void MessageOfCharacter::_internal_set_timeuntilultimateskillavailable(double value) {
  
  timeuntilultimateskillavailable_ = value;
}
inline void MessageOfCharacter::set_timeuntilultimateskillavailable(double value) {
  _internal_set_timeuntilultimateskillavailable(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.timeUntilUltimateSkillAvailable)
}

// int32 gemNum = 9;
inline void MessageOfCharacter::clear_gemnum() {
  gemnum_ = 0;
}
inline int32_t MessageOfCharacter::_internal_gemnum() const {
  return gemnum_;
}
inline int32_t MessageOfCharacter::gemnum() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.gemNum)
  return _internal_gemnum();
}
inline void MessageOfCharacter::_internal_set_gemnum(int32_t value) {
  
  gemnum_ = value;
}
inline void MessageOfCharacter::set_gemnum(int32_t value) {
  _internal_set_gemnum(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.gemNum)
}

// double facingDirection = 10;
inline void MessageOfCharacter::clear_facingdirection() {
  facingdirection_ = 0;
}
inline double MessageOfCharacter::_internal_facingdirection() const {
  return facingdirection_;
}
inline double MessageOfCharacter::facingdirection() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.facingDirection)
  return _internal_facingdirection();
}
inline void MessageOfCharacter::_internal_set_facingdirection(double value) {
  
  facingdirection_ = value;
}
inline void MessageOfCharacter::set_facingdirection(double value) {
  _internal_set_facingdirection(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.facingDirection)
}

// .Protobuf.PropType prop = 11;
inline void MessageOfCharacter::clear_prop() {
  prop_ = 0;
}
inline ::Protobuf::PropType MessageOfCharacter::_internal_prop() const {
  return static_cast< ::Protobuf::PropType >(prop_);
}
inline ::Protobuf::PropType MessageOfCharacter::prop() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.prop)
  return _internal_prop();
}
inline void MessageOfCharacter::_internal_set_prop(::Protobuf::PropType value) {
  
  prop_ = value;
}
inline void MessageOfCharacter::set_prop(::Protobuf::PropType value) {
  _internal_set_prop(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.prop)
}

// .Protobuf.PlaceType place = 12;
inline void MessageOfCharacter::clear_place() {
  place_ = 0;
}
inline ::Protobuf::PlaceType MessageOfCharacter::_internal_place() const {
  return static_cast< ::Protobuf::PlaceType >(place_);
}
inline ::Protobuf::PlaceType MessageOfCharacter::place() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.place)
  return _internal_place();
}
inline void MessageOfCharacter::_internal_set_place(::Protobuf::PlaceType value) {
  
  place_ = value;
}
inline void MessageOfCharacter::set_place(::Protobuf::PlaceType value) {
  _internal_set_place(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.place)
}

// double vampire = 13;
inline void MessageOfCharacter::clear_vampire() {
  vampire_ = 0;
}
inline double MessageOfCharacter::_internal_vampire() const {
  return vampire_;
}
inline double MessageOfCharacter::vampire() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.vampire)
  return _internal_vampire();
}
inline void MessageOfCharacter::_internal_set_vampire(double value) {
  
  vampire_ = value;
}
inline void MessageOfCharacter::set_vampire(double value) {
  _internal_set_vampire(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.vampire)
}

// .Protobuf.BulletType bulletType = 14;
inline void MessageOfCharacter::clear_bullettype() {
  bullettype_ = 0;
}
inline ::Protobuf::BulletType MessageOfCharacter::_internal_bullettype() const {
  return static_cast< ::Protobuf::BulletType >(bullettype_);
}
inline ::Protobuf::BulletType MessageOfCharacter::bullettype() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.bulletType)
  return _internal_bullettype();
}
inline void MessageOfCharacter::_internal_set_bullettype(::Protobuf::BulletType value) {
  
  bullettype_ = value;
}
inline void MessageOfCharacter::set_bullettype(::Protobuf::BulletType value) {
  _internal_set_bullettype(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.bulletType)
}

// bool isResetting = 15;
inline void MessageOfCharacter::clear_isresetting() {
  isresetting_ = false;
}
inline bool MessageOfCharacter::_internal_isresetting() const {
  return isresetting_;
}
inline bool MessageOfCharacter::isresetting() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.isResetting)
  return _internal_isresetting();
}
inline void MessageOfCharacter::_internal_set_isresetting(bool value) {
  
  isresetting_ = value;
}
inline void MessageOfCharacter::set_isresetting(bool value) {
  _internal_set_isresetting(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.isResetting)
}

// .Protobuf.PassiveSkillType PassiveSkillType = 16;
inline void MessageOfCharacter::clear_passiveskilltype() {
  passiveskilltype_ = 0;
}
inline ::Protobuf::PassiveSkillType MessageOfCharacter::_internal_passiveskilltype() const {
  return static_cast< ::Protobuf::PassiveSkillType >(passiveskilltype_);
}
inline ::Protobuf::PassiveSkillType MessageOfCharacter::passiveskilltype() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.PassiveSkillType)
  return _internal_passiveskilltype();
}
inline void MessageOfCharacter::_internal_set_passiveskilltype(::Protobuf::PassiveSkillType value) {
  
  passiveskilltype_ = value;
}
inline void MessageOfCharacter::set_passiveskilltype(::Protobuf::PassiveSkillType value) {
  _internal_set_passiveskilltype(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.PassiveSkillType)
}

// .Protobuf.ActiveSkillType ActiveSkillType = 17;
inline void MessageOfCharacter::clear_activeskilltype() {
  activeskilltype_ = 0;
}
inline ::Protobuf::ActiveSkillType MessageOfCharacter::_internal_activeskilltype() const {
  return static_cast< ::Protobuf::ActiveSkillType >(activeskilltype_);
}
inline ::Protobuf::ActiveSkillType MessageOfCharacter::activeskilltype() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.ActiveSkillType)
  return _internal_activeskilltype();
}
inline void MessageOfCharacter::_internal_set_activeskilltype(::Protobuf::ActiveSkillType value) {
  
  activeskilltype_ = value;
}
inline void MessageOfCharacter::set_activeskilltype(::Protobuf::ActiveSkillType value) {
  _internal_set_activeskilltype(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.ActiveSkillType)
}

// int64 guid = 18;
inline void MessageOfCharacter::clear_guid() {
  guid_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_guid() const {
  return guid_;
}
inline int64_t MessageOfCharacter::guid() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.guid)
  return _internal_guid();
}
inline void MessageOfCharacter::_internal_set_guid(int64_t value) {
  
  guid_ = value;
}
inline void MessageOfCharacter::set_guid(int64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.guid)
}

// bool canMove = 19;
inline void MessageOfCharacter::clear_canmove() {
  canmove_ = false;
}
inline bool MessageOfCharacter::_internal_canmove() const {
  return canmove_;
}
inline bool MessageOfCharacter::canmove() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.canMove)
  return _internal_canmove();
}
inline void MessageOfCharacter::_internal_set_canmove(bool value) {
  
  canmove_ = value;
}
inline void MessageOfCharacter::set_canmove(bool value) {
  _internal_set_canmove(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.canMove)
}

// int32 radius = 20;
inline void MessageOfCharacter::clear_radius() {
  radius_ = 0;
}
inline int32_t MessageOfCharacter::_internal_radius() const {
  return radius_;
}
inline int32_t MessageOfCharacter::radius() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.radius)
  return _internal_radius();
}
inline void MessageOfCharacter::_internal_set_radius(int32_t value) {
  
  radius_ = value;
}
inline void MessageOfCharacter::set_radius(int32_t value) {
  _internal_set_radius(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.radius)
}

// int32 CD = 21;
inline void MessageOfCharacter::clear_cd() {
  cd_ = 0;
}
inline int32_t MessageOfCharacter::_internal_cd() const {
  return cd_;
}
inline int32_t MessageOfCharacter::cd() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.CD)
  return _internal_cd();
}
inline void MessageOfCharacter::_internal_set_cd(int32_t value) {
  
  cd_ = value;
}
inline void MessageOfCharacter::set_cd(int32_t value) {
  _internal_set_cd(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.CD)
}

// int32 lifeNum = 22;
inline void MessageOfCharacter::clear_lifenum() {
  lifenum_ = 0;
}
inline int32_t MessageOfCharacter::_internal_lifenum() const {
  return lifenum_;
}
inline int32_t MessageOfCharacter::lifenum() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.lifeNum)
  return _internal_lifenum();
}
inline void MessageOfCharacter::_internal_set_lifenum(int32_t value) {
  
  lifenum_ = value;
}
inline void MessageOfCharacter::set_lifenum(int32_t value) {
  _internal_set_lifenum(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.lifeNum)
}

// int32 score = 23;
inline void MessageOfCharacter::clear_score() {
  score_ = 0;
}
inline int32_t MessageOfCharacter::_internal_score() const {
  return score_;
}
inline int32_t MessageOfCharacter::score() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.score)
  return _internal_score();
}
inline void MessageOfCharacter::_internal_set_score(int32_t value) {
  
  score_ = value;
}
inline void MessageOfCharacter::set_score(int32_t value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.score)
}

// int64 teamID = 24;
inline void MessageOfCharacter::clear_teamid() {
  teamid_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_teamid() const {
  return teamid_;
}
inline int64_t MessageOfCharacter::teamid() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.teamID)
  return _internal_teamid();
}
inline void MessageOfCharacter::_internal_set_teamid(int64_t value) {
  
  teamid_ = value;
}
inline void MessageOfCharacter::set_teamid(int64_t value) {
  _internal_set_teamid(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.teamID)
}

// int64 playerID = 25;
inline void MessageOfCharacter::clear_playerid() {
  playerid_ = int64_t{0};
}
inline int64_t MessageOfCharacter::_internal_playerid() const {
  return playerid_;
}
inline int64_t MessageOfCharacter::playerid() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.playerID)
  return _internal_playerid();
}
inline void MessageOfCharacter::_internal_set_playerid(int64_t value) {
  
  playerid_ = value;
}
inline void MessageOfCharacter::set_playerid(int64_t value) {
  _internal_set_playerid(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.playerID)
}

// bool isInvisible = 26;
inline void MessageOfCharacter::clear_isinvisible() {
  isinvisible_ = false;
}
inline bool MessageOfCharacter::_internal_isinvisible() const {
  return isinvisible_;
}
inline bool MessageOfCharacter::isinvisible() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.isInvisible)
  return _internal_isinvisible();
}
inline void MessageOfCharacter::_internal_set_isinvisible(bool value) {
  
  isinvisible_ = value;
}
inline void MessageOfCharacter::set_isinvisible(bool value) {
  _internal_set_isinvisible(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.isInvisible)
}

// repeated .Protobuf.BuffType buff = 27;
inline int MessageOfCharacter::_internal_buff_size() const {
  return buff_.size();
}
inline int MessageOfCharacter::buff_size() const {
  return _internal_buff_size();
}
inline void MessageOfCharacter::clear_buff() {
  buff_.Clear();
}
inline ::Protobuf::BuffType MessageOfCharacter::_internal_buff(int index) const {
  return static_cast< ::Protobuf::BuffType >(buff_.Get(index));
}
inline ::Protobuf::BuffType MessageOfCharacter::buff(int index) const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfCharacter.buff)
  return _internal_buff(index);
}
inline void MessageOfCharacter::set_buff(int index, ::Protobuf::BuffType value) {
  buff_.Set(index, value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfCharacter.buff)
}
inline void MessageOfCharacter::_internal_add_buff(::Protobuf::BuffType value) {
  buff_.Add(value);
}
inline void MessageOfCharacter::add_buff(::Protobuf::BuffType value) {
  _internal_add_buff(value);
  // @@protoc_insertion_point(field_add:Protobuf.MessageOfCharacter.buff)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
MessageOfCharacter::buff() const {
  // @@protoc_insertion_point(field_list:Protobuf.MessageOfCharacter.buff)
  return buff_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
MessageOfCharacter::_internal_mutable_buff() {
  return &buff_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
MessageOfCharacter::mutable_buff() {
  // @@protoc_insertion_point(field_mutable_list:Protobuf.MessageOfCharacter.buff)
  return _internal_mutable_buff();
}

// -------------------------------------------------------------------

// MessageOfProp

// .Protobuf.PropType type = 1;
inline void MessageOfProp::clear_type() {
  type_ = 0;
}
inline ::Protobuf::PropType MessageOfProp::_internal_type() const {
  return static_cast< ::Protobuf::PropType >(type_);
}
inline ::Protobuf::PropType MessageOfProp::type() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfProp.type)
  return _internal_type();
}
inline void MessageOfProp::_internal_set_type(::Protobuf::PropType value) {
  
  type_ = value;
}
inline void MessageOfProp::set_type(::Protobuf::PropType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfProp.type)
}

// int32 x = 2;
inline void MessageOfProp::clear_x() {
  x_ = 0;
}
inline int32_t MessageOfProp::_internal_x() const {
  return x_;
}
inline int32_t MessageOfProp::x() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfProp.x)
  return _internal_x();
}
inline void MessageOfProp::_internal_set_x(int32_t value) {
  
  x_ = value;
}
inline void MessageOfProp::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfProp.x)
}

// int32 y = 3;
inline void MessageOfProp::clear_y() {
  y_ = 0;
}
inline int32_t MessageOfProp::_internal_y() const {
  return y_;
}
inline int32_t MessageOfProp::y() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfProp.y)
  return _internal_y();
}
inline void MessageOfProp::_internal_set_y(int32_t value) {
  
  y_ = value;
}
inline void MessageOfProp::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfProp.y)
}

// double facingDirection = 4;
inline void MessageOfProp::clear_facingdirection() {
  facingdirection_ = 0;
}
inline double MessageOfProp::_internal_facingdirection() const {
  return facingdirection_;
}
inline double MessageOfProp::facingdirection() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfProp.facingDirection)
  return _internal_facingdirection();
}
inline void MessageOfProp::_internal_set_facingdirection(double value) {
  
  facingdirection_ = value;
}
inline void MessageOfProp::set_facingdirection(double value) {
  _internal_set_facingdirection(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfProp.facingDirection)
}

// int64 guid = 5;
inline void MessageOfProp::clear_guid() {
  guid_ = int64_t{0};
}
inline int64_t MessageOfProp::_internal_guid() const {
  return guid_;
}
inline int64_t MessageOfProp::guid() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfProp.guid)
  return _internal_guid();
}
inline void MessageOfProp::_internal_set_guid(int64_t value) {
  
  guid_ = value;
}
inline void MessageOfProp::set_guid(int64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfProp.guid)
}

// int32 size = 6;
inline void MessageOfProp::clear_size() {
  size_ = 0;
}
inline int32_t MessageOfProp::_internal_size() const {
  return size_;
}
inline int32_t MessageOfProp::size() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfProp.size)
  return _internal_size();
}
inline void MessageOfProp::_internal_set_size(int32_t value) {
  
  size_ = value;
}
inline void MessageOfProp::set_size(int32_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfProp.size)
}

// .Protobuf.PlaceType place = 7;
inline void MessageOfProp::clear_place() {
  place_ = 0;
}
inline ::Protobuf::PlaceType MessageOfProp::_internal_place() const {
  return static_cast< ::Protobuf::PlaceType >(place_);
}
inline ::Protobuf::PlaceType MessageOfProp::place() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfProp.place)
  return _internal_place();
}
inline void MessageOfProp::_internal_set_place(::Protobuf::PlaceType value) {
  
  place_ = value;
}
inline void MessageOfProp::set_place(::Protobuf::PlaceType value) {
  _internal_set_place(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfProp.place)
}

// bool isMoving = 8;
inline void MessageOfProp::clear_ismoving() {
  ismoving_ = false;
}
inline bool MessageOfProp::_internal_ismoving() const {
  return ismoving_;
}
inline bool MessageOfProp::ismoving() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfProp.isMoving)
  return _internal_ismoving();
}
inline void MessageOfProp::_internal_set_ismoving(bool value) {
  
  ismoving_ = value;
}
inline void MessageOfProp::set_ismoving(bool value) {
  _internal_set_ismoving(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfProp.isMoving)
}

// -------------------------------------------------------------------

// MessageOfBullet

// .Protobuf.BulletType type = 1;
inline void MessageOfBullet::clear_type() {
  type_ = 0;
}
inline ::Protobuf::BulletType MessageOfBullet::_internal_type() const {
  return static_cast< ::Protobuf::BulletType >(type_);
}
inline ::Protobuf::BulletType MessageOfBullet::type() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBullet.type)
  return _internal_type();
}
inline void MessageOfBullet::_internal_set_type(::Protobuf::BulletType value) {
  
  type_ = value;
}
inline void MessageOfBullet::set_type(::Protobuf::BulletType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBullet.type)
}

// int32 x = 2;
inline void MessageOfBullet::clear_x() {
  x_ = 0;
}
inline int32_t MessageOfBullet::_internal_x() const {
  return x_;
}
inline int32_t MessageOfBullet::x() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBullet.x)
  return _internal_x();
}
inline void MessageOfBullet::_internal_set_x(int32_t value) {
  
  x_ = value;
}
inline void MessageOfBullet::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBullet.x)
}

// int32 y = 3;
inline void MessageOfBullet::clear_y() {
  y_ = 0;
}
inline int32_t MessageOfBullet::_internal_y() const {
  return y_;
}
inline int32_t MessageOfBullet::y() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBullet.y)
  return _internal_y();
}
inline void MessageOfBullet::_internal_set_y(int32_t value) {
  
  y_ = value;
}
inline void MessageOfBullet::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBullet.y)
}

// double facingDirection = 4;
inline void MessageOfBullet::clear_facingdirection() {
  facingdirection_ = 0;
}
inline double MessageOfBullet::_internal_facingdirection() const {
  return facingdirection_;
}
inline double MessageOfBullet::facingdirection() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBullet.facingDirection)
  return _internal_facingdirection();
}
inline void MessageOfBullet::_internal_set_facingdirection(double value) {
  
  facingdirection_ = value;
}
inline void MessageOfBullet::set_facingdirection(double value) {
  _internal_set_facingdirection(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBullet.facingDirection)
}

// int64 guid = 5;
inline void MessageOfBullet::clear_guid() {
  guid_ = int64_t{0};
}
inline int64_t MessageOfBullet::_internal_guid() const {
  return guid_;
}
inline int64_t MessageOfBullet::guid() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBullet.guid)
  return _internal_guid();
}
inline void MessageOfBullet::_internal_set_guid(int64_t value) {
  
  guid_ = value;
}
inline void MessageOfBullet::set_guid(int64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBullet.guid)
}

// int64 parentTeamID = 6;
inline void MessageOfBullet::clear_parentteamid() {
  parentteamid_ = int64_t{0};
}
inline int64_t MessageOfBullet::_internal_parentteamid() const {
  return parentteamid_;
}
inline int64_t MessageOfBullet::parentteamid() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBullet.parentTeamID)
  return _internal_parentteamid();
}
inline void MessageOfBullet::_internal_set_parentteamid(int64_t value) {
  
  parentteamid_ = value;
}
inline void MessageOfBullet::set_parentteamid(int64_t value) {
  _internal_set_parentteamid(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBullet.parentTeamID)
}

// .Protobuf.PlaceType place = 7;
inline void MessageOfBullet::clear_place() {
  place_ = 0;
}
inline ::Protobuf::PlaceType MessageOfBullet::_internal_place() const {
  return static_cast< ::Protobuf::PlaceType >(place_);
}
inline ::Protobuf::PlaceType MessageOfBullet::place() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBullet.place)
  return _internal_place();
}
inline void MessageOfBullet::_internal_set_place(::Protobuf::PlaceType value) {
  
  place_ = value;
}
inline void MessageOfBullet::set_place(::Protobuf::PlaceType value) {
  _internal_set_place(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBullet.place)
}

// double bombRange = 8;
inline void MessageOfBullet::clear_bombrange() {
  bombrange_ = 0;
}
inline double MessageOfBullet::_internal_bombrange() const {
  return bombrange_;
}
inline double MessageOfBullet::bombrange() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBullet.bombRange)
  return _internal_bombrange();
}
inline void MessageOfBullet::_internal_set_bombrange(double value) {
  
  bombrange_ = value;
}
inline void MessageOfBullet::set_bombrange(double value) {
  _internal_set_bombrange(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBullet.bombRange)
}

// -------------------------------------------------------------------

// MessageOfBombedBullet

// .Protobuf.BulletType type = 1;
inline void MessageOfBombedBullet::clear_type() {
  type_ = 0;
}
inline ::Protobuf::BulletType MessageOfBombedBullet::_internal_type() const {
  return static_cast< ::Protobuf::BulletType >(type_);
}
inline ::Protobuf::BulletType MessageOfBombedBullet::type() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBombedBullet.type)
  return _internal_type();
}
inline void MessageOfBombedBullet::_internal_set_type(::Protobuf::BulletType value) {
  
  type_ = value;
}
inline void MessageOfBombedBullet::set_type(::Protobuf::BulletType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBombedBullet.type)
}

// int32 x = 2;
inline void MessageOfBombedBullet::clear_x() {
  x_ = 0;
}
inline int32_t MessageOfBombedBullet::_internal_x() const {
  return x_;
}
inline int32_t MessageOfBombedBullet::x() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBombedBullet.x)
  return _internal_x();
}
inline void MessageOfBombedBullet::_internal_set_x(int32_t value) {
  
  x_ = value;
}
inline void MessageOfBombedBullet::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBombedBullet.x)
}

// int32 y = 3;
inline void MessageOfBombedBullet::clear_y() {
  y_ = 0;
}
inline int32_t MessageOfBombedBullet::_internal_y() const {
  return y_;
}
inline int32_t MessageOfBombedBullet::y() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBombedBullet.y)
  return _internal_y();
}
inline void MessageOfBombedBullet::_internal_set_y(int32_t value) {
  
  y_ = value;
}
inline void MessageOfBombedBullet::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBombedBullet.y)
}

// double facingDirection = 4;
inline void MessageOfBombedBullet::clear_facingdirection() {
  facingdirection_ = 0;
}
inline double MessageOfBombedBullet::_internal_facingdirection() const {
  return facingdirection_;
}
inline double MessageOfBombedBullet::facingdirection() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBombedBullet.facingDirection)
  return _internal_facingdirection();
}
inline void MessageOfBombedBullet::_internal_set_facingdirection(double value) {
  
  facingdirection_ = value;
}
inline void MessageOfBombedBullet::set_facingdirection(double value) {
  _internal_set_facingdirection(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBombedBullet.facingDirection)
}

// int64 mappingID = 5;
inline void MessageOfBombedBullet::clear_mappingid() {
  mappingid_ = int64_t{0};
}
inline int64_t MessageOfBombedBullet::_internal_mappingid() const {
  return mappingid_;
}
inline int64_t MessageOfBombedBullet::mappingid() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBombedBullet.mappingID)
  return _internal_mappingid();
}
inline void MessageOfBombedBullet::_internal_set_mappingid(int64_t value) {
  
  mappingid_ = value;
}
inline void MessageOfBombedBullet::set_mappingid(int64_t value) {
  _internal_set_mappingid(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBombedBullet.mappingID)
}

// double bombRange = 6;
inline void MessageOfBombedBullet::clear_bombrange() {
  bombrange_ = 0;
}
inline double MessageOfBombedBullet::_internal_bombrange() const {
  return bombrange_;
}
inline double MessageOfBombedBullet::bombrange() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfBombedBullet.bombRange)
  return _internal_bombrange();
}
inline void MessageOfBombedBullet::_internal_set_bombrange(double value) {
  
  bombrange_ = value;
}
inline void MessageOfBombedBullet::set_bombrange(double value) {
  _internal_set_bombrange(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfBombedBullet.bombRange)
}

// -------------------------------------------------------------------

// MessageOfPickedProp

// .Protobuf.PropType type = 1;
inline void MessageOfPickedProp::clear_type() {
  type_ = 0;
}
inline ::Protobuf::PropType MessageOfPickedProp::_internal_type() const {
  return static_cast< ::Protobuf::PropType >(type_);
}
inline ::Protobuf::PropType MessageOfPickedProp::type() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfPickedProp.type)
  return _internal_type();
}
inline void MessageOfPickedProp::_internal_set_type(::Protobuf::PropType value) {
  
  type_ = value;
}
inline void MessageOfPickedProp::set_type(::Protobuf::PropType value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfPickedProp.type)
}

// int32 x = 2;
inline void MessageOfPickedProp::clear_x() {
  x_ = 0;
}
inline int32_t MessageOfPickedProp::_internal_x() const {
  return x_;
}
inline int32_t MessageOfPickedProp::x() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfPickedProp.x)
  return _internal_x();
}
inline void MessageOfPickedProp::_internal_set_x(int32_t value) {
  
  x_ = value;
}
inline void MessageOfPickedProp::set_x(int32_t value) {
  _internal_set_x(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfPickedProp.x)
}

// int32 y = 3;
inline void MessageOfPickedProp::clear_y() {
  y_ = 0;
}
inline int32_t MessageOfPickedProp::_internal_y() const {
  return y_;
}
inline int32_t MessageOfPickedProp::y() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfPickedProp.y)
  return _internal_y();
}
inline void MessageOfPickedProp::_internal_set_y(int32_t value) {
  
  y_ = value;
}
inline void MessageOfPickedProp::set_y(int32_t value) {
  _internal_set_y(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfPickedProp.y)
}

// double facingDirection = 4;
inline void MessageOfPickedProp::clear_facingdirection() {
  facingdirection_ = 0;
}
inline double MessageOfPickedProp::_internal_facingdirection() const {
  return facingdirection_;
}
inline double MessageOfPickedProp::facingdirection() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfPickedProp.facingDirection)
  return _internal_facingdirection();
}
inline void MessageOfPickedProp::_internal_set_facingdirection(double value) {
  
  facingdirection_ = value;
}
inline void MessageOfPickedProp::set_facingdirection(double value) {
  _internal_set_facingdirection(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfPickedProp.facingDirection)
}

// int64 mappingID = 5;
inline void MessageOfPickedProp::clear_mappingid() {
  mappingid_ = int64_t{0};
}
inline int64_t MessageOfPickedProp::_internal_mappingid() const {
  return mappingid_;
}
inline int64_t MessageOfPickedProp::mappingid() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfPickedProp.mappingID)
  return _internal_mappingid();
}
inline void MessageOfPickedProp::_internal_set_mappingid(int64_t value) {
  
  mappingid_ = value;
}
inline void MessageOfPickedProp::set_mappingid(int64_t value) {
  _internal_set_mappingid(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfPickedProp.mappingID)
}

// -------------------------------------------------------------------

// MessageOfMap_Row

// repeated int32 col = 1;
inline int MessageOfMap_Row::_internal_col_size() const {
  return col_.size();
}
inline int MessageOfMap_Row::col_size() const {
  return _internal_col_size();
}
inline void MessageOfMap_Row::clear_col() {
  col_.Clear();
}
inline int32_t MessageOfMap_Row::_internal_col(int index) const {
  return col_.Get(index);
}
inline int32_t MessageOfMap_Row::col(int index) const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfMap.Row.col)
  return _internal_col(index);
}
inline void MessageOfMap_Row::set_col(int index, int32_t value) {
  col_.Set(index, value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageOfMap.Row.col)
}
inline void MessageOfMap_Row::_internal_add_col(int32_t value) {
  col_.Add(value);
}
inline void MessageOfMap_Row::add_col(int32_t value) {
  _internal_add_col(value);
  // @@protoc_insertion_point(field_add:Protobuf.MessageOfMap.Row.col)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
MessageOfMap_Row::_internal_col() const {
  return col_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >&
MessageOfMap_Row::col() const {
  // @@protoc_insertion_point(field_list:Protobuf.MessageOfMap.Row.col)
  return _internal_col();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
MessageOfMap_Row::_internal_mutable_col() {
  return &col_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< int32_t >*
MessageOfMap_Row::mutable_col() {
  // @@protoc_insertion_point(field_mutable_list:Protobuf.MessageOfMap.Row.col)
  return _internal_mutable_col();
}

// -------------------------------------------------------------------

// MessageOfMap

// repeated .Protobuf.MessageOfMap.Row row = 51;
inline int MessageOfMap::_internal_row_size() const {
  return row_.size();
}
inline int MessageOfMap::row_size() const {
  return _internal_row_size();
}
inline void MessageOfMap::clear_row() {
  row_.Clear();
}
inline ::Protobuf::MessageOfMap_Row* MessageOfMap::mutable_row(int index) {
  // @@protoc_insertion_point(field_mutable:Protobuf.MessageOfMap.row)
  return row_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Protobuf::MessageOfMap_Row >*
MessageOfMap::mutable_row() {
  // @@protoc_insertion_point(field_mutable_list:Protobuf.MessageOfMap.row)
  return &row_;
}
inline const ::Protobuf::MessageOfMap_Row& MessageOfMap::_internal_row(int index) const {
  return row_.Get(index);
}
inline const ::Protobuf::MessageOfMap_Row& MessageOfMap::row(int index) const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageOfMap.row)
  return _internal_row(index);
}
inline ::Protobuf::MessageOfMap_Row* MessageOfMap::_internal_add_row() {
  return row_.Add();
}
inline ::Protobuf::MessageOfMap_Row* MessageOfMap::add_row() {
  ::Protobuf::MessageOfMap_Row* _add = _internal_add_row();
  // @@protoc_insertion_point(field_add:Protobuf.MessageOfMap.row)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Protobuf::MessageOfMap_Row >&
MessageOfMap::row() const {
  // @@protoc_insertion_point(field_list:Protobuf.MessageOfMap.row)
  return row_;
}

// -------------------------------------------------------------------

// MessageToClient_GameObjMessage

// .Protobuf.MessageOfCharacter messageOfCharacter = 1;
inline bool MessageToClient_GameObjMessage::_internal_has_messageofcharacter() const {
  return obj_case() == kMessageOfCharacter;
}
inline bool MessageToClient_GameObjMessage::has_messageofcharacter() const {
  return _internal_has_messageofcharacter();
}
inline void MessageToClient_GameObjMessage::set_has_messageofcharacter() {
  _oneof_case_[0] = kMessageOfCharacter;
}
inline void MessageToClient_GameObjMessage::clear_messageofcharacter() {
  if (_internal_has_messageofcharacter()) {
    if (GetArenaForAllocation() == nullptr) {
      delete obj_.messageofcharacter_;
    }
    clear_has_obj();
  }
}
inline ::Protobuf::MessageOfCharacter* MessageToClient_GameObjMessage::release_messageofcharacter() {
  // @@protoc_insertion_point(field_release:Protobuf.MessageToClient.GameObjMessage.messageOfCharacter)
  if (_internal_has_messageofcharacter()) {
    clear_has_obj();
      ::Protobuf::MessageOfCharacter* temp = obj_.messageofcharacter_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    obj_.messageofcharacter_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Protobuf::MessageOfCharacter& MessageToClient_GameObjMessage::_internal_messageofcharacter() const {
  return _internal_has_messageofcharacter()
      ? *obj_.messageofcharacter_
      : reinterpret_cast< ::Protobuf::MessageOfCharacter&>(::Protobuf::_MessageOfCharacter_default_instance_);
}
inline const ::Protobuf::MessageOfCharacter& MessageToClient_GameObjMessage::messageofcharacter() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageToClient.GameObjMessage.messageOfCharacter)
  return _internal_messageofcharacter();
}
inline ::Protobuf::MessageOfCharacter* MessageToClient_GameObjMessage::unsafe_arena_release_messageofcharacter() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Protobuf.MessageToClient.GameObjMessage.messageOfCharacter)
  if (_internal_has_messageofcharacter()) {
    clear_has_obj();
    ::Protobuf::MessageOfCharacter* temp = obj_.messageofcharacter_;
    obj_.messageofcharacter_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageToClient_GameObjMessage::unsafe_arena_set_allocated_messageofcharacter(::Protobuf::MessageOfCharacter* messageofcharacter) {
  clear_obj();
  if (messageofcharacter) {
    set_has_messageofcharacter();
    obj_.messageofcharacter_ = messageofcharacter;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Protobuf.MessageToClient.GameObjMessage.messageOfCharacter)
}
inline ::Protobuf::MessageOfCharacter* MessageToClient_GameObjMessage::_internal_mutable_messageofcharacter() {
  if (!_internal_has_messageofcharacter()) {
    clear_obj();
    set_has_messageofcharacter();
    obj_.messageofcharacter_ = CreateMaybeMessage< ::Protobuf::MessageOfCharacter >(GetArenaForAllocation());
  }
  return obj_.messageofcharacter_;
}
inline ::Protobuf::MessageOfCharacter* MessageToClient_GameObjMessage::mutable_messageofcharacter() {
  ::Protobuf::MessageOfCharacter* _msg = _internal_mutable_messageofcharacter();
  // @@protoc_insertion_point(field_mutable:Protobuf.MessageToClient.GameObjMessage.messageOfCharacter)
  return _msg;
}

// .Protobuf.MessageOfBullet messageOfBullet = 2;
inline bool MessageToClient_GameObjMessage::_internal_has_messageofbullet() const {
  return obj_case() == kMessageOfBullet;
}
inline bool MessageToClient_GameObjMessage::has_messageofbullet() const {
  return _internal_has_messageofbullet();
}
inline void MessageToClient_GameObjMessage::set_has_messageofbullet() {
  _oneof_case_[0] = kMessageOfBullet;
}
inline void MessageToClient_GameObjMessage::clear_messageofbullet() {
  if (_internal_has_messageofbullet()) {
    if (GetArenaForAllocation() == nullptr) {
      delete obj_.messageofbullet_;
    }
    clear_has_obj();
  }
}
inline ::Protobuf::MessageOfBullet* MessageToClient_GameObjMessage::release_messageofbullet() {
  // @@protoc_insertion_point(field_release:Protobuf.MessageToClient.GameObjMessage.messageOfBullet)
  if (_internal_has_messageofbullet()) {
    clear_has_obj();
      ::Protobuf::MessageOfBullet* temp = obj_.messageofbullet_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    obj_.messageofbullet_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Protobuf::MessageOfBullet& MessageToClient_GameObjMessage::_internal_messageofbullet() const {
  return _internal_has_messageofbullet()
      ? *obj_.messageofbullet_
      : reinterpret_cast< ::Protobuf::MessageOfBullet&>(::Protobuf::_MessageOfBullet_default_instance_);
}
inline const ::Protobuf::MessageOfBullet& MessageToClient_GameObjMessage::messageofbullet() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageToClient.GameObjMessage.messageOfBullet)
  return _internal_messageofbullet();
}
inline ::Protobuf::MessageOfBullet* MessageToClient_GameObjMessage::unsafe_arena_release_messageofbullet() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Protobuf.MessageToClient.GameObjMessage.messageOfBullet)
  if (_internal_has_messageofbullet()) {
    clear_has_obj();
    ::Protobuf::MessageOfBullet* temp = obj_.messageofbullet_;
    obj_.messageofbullet_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageToClient_GameObjMessage::unsafe_arena_set_allocated_messageofbullet(::Protobuf::MessageOfBullet* messageofbullet) {
  clear_obj();
  if (messageofbullet) {
    set_has_messageofbullet();
    obj_.messageofbullet_ = messageofbullet;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Protobuf.MessageToClient.GameObjMessage.messageOfBullet)
}
inline ::Protobuf::MessageOfBullet* MessageToClient_GameObjMessage::_internal_mutable_messageofbullet() {
  if (!_internal_has_messageofbullet()) {
    clear_obj();
    set_has_messageofbullet();
    obj_.messageofbullet_ = CreateMaybeMessage< ::Protobuf::MessageOfBullet >(GetArenaForAllocation());
  }
  return obj_.messageofbullet_;
}
inline ::Protobuf::MessageOfBullet* MessageToClient_GameObjMessage::mutable_messageofbullet() {
  ::Protobuf::MessageOfBullet* _msg = _internal_mutable_messageofbullet();
  // @@protoc_insertion_point(field_mutable:Protobuf.MessageToClient.GameObjMessage.messageOfBullet)
  return _msg;
}

// .Protobuf.MessageOfProp messageOfProp = 3;
inline bool MessageToClient_GameObjMessage::_internal_has_messageofprop() const {
  return obj_case() == kMessageOfProp;
}
inline bool MessageToClient_GameObjMessage::has_messageofprop() const {
  return _internal_has_messageofprop();
}
inline void MessageToClient_GameObjMessage::set_has_messageofprop() {
  _oneof_case_[0] = kMessageOfProp;
}
inline void MessageToClient_GameObjMessage::clear_messageofprop() {
  if (_internal_has_messageofprop()) {
    if (GetArenaForAllocation() == nullptr) {
      delete obj_.messageofprop_;
    }
    clear_has_obj();
  }
}
inline ::Protobuf::MessageOfProp* MessageToClient_GameObjMessage::release_messageofprop() {
  // @@protoc_insertion_point(field_release:Protobuf.MessageToClient.GameObjMessage.messageOfProp)
  if (_internal_has_messageofprop()) {
    clear_has_obj();
      ::Protobuf::MessageOfProp* temp = obj_.messageofprop_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    obj_.messageofprop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Protobuf::MessageOfProp& MessageToClient_GameObjMessage::_internal_messageofprop() const {
  return _internal_has_messageofprop()
      ? *obj_.messageofprop_
      : reinterpret_cast< ::Protobuf::MessageOfProp&>(::Protobuf::_MessageOfProp_default_instance_);
}
inline const ::Protobuf::MessageOfProp& MessageToClient_GameObjMessage::messageofprop() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageToClient.GameObjMessage.messageOfProp)
  return _internal_messageofprop();
}
inline ::Protobuf::MessageOfProp* MessageToClient_GameObjMessage::unsafe_arena_release_messageofprop() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Protobuf.MessageToClient.GameObjMessage.messageOfProp)
  if (_internal_has_messageofprop()) {
    clear_has_obj();
    ::Protobuf::MessageOfProp* temp = obj_.messageofprop_;
    obj_.messageofprop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageToClient_GameObjMessage::unsafe_arena_set_allocated_messageofprop(::Protobuf::MessageOfProp* messageofprop) {
  clear_obj();
  if (messageofprop) {
    set_has_messageofprop();
    obj_.messageofprop_ = messageofprop;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Protobuf.MessageToClient.GameObjMessage.messageOfProp)
}
inline ::Protobuf::MessageOfProp* MessageToClient_GameObjMessage::_internal_mutable_messageofprop() {
  if (!_internal_has_messageofprop()) {
    clear_obj();
    set_has_messageofprop();
    obj_.messageofprop_ = CreateMaybeMessage< ::Protobuf::MessageOfProp >(GetArenaForAllocation());
  }
  return obj_.messageofprop_;
}
inline ::Protobuf::MessageOfProp* MessageToClient_GameObjMessage::mutable_messageofprop() {
  ::Protobuf::MessageOfProp* _msg = _internal_mutable_messageofprop();
  // @@protoc_insertion_point(field_mutable:Protobuf.MessageToClient.GameObjMessage.messageOfProp)
  return _msg;
}

// .Protobuf.MessageOfMap messageOfMap = 4;
inline bool MessageToClient_GameObjMessage::_internal_has_messageofmap() const {
  return obj_case() == kMessageOfMap;
}
inline bool MessageToClient_GameObjMessage::has_messageofmap() const {
  return _internal_has_messageofmap();
}
inline void MessageToClient_GameObjMessage::set_has_messageofmap() {
  _oneof_case_[0] = kMessageOfMap;
}
inline void MessageToClient_GameObjMessage::clear_messageofmap() {
  if (_internal_has_messageofmap()) {
    if (GetArenaForAllocation() == nullptr) {
      delete obj_.messageofmap_;
    }
    clear_has_obj();
  }
}
inline ::Protobuf::MessageOfMap* MessageToClient_GameObjMessage::release_messageofmap() {
  // @@protoc_insertion_point(field_release:Protobuf.MessageToClient.GameObjMessage.messageOfMap)
  if (_internal_has_messageofmap()) {
    clear_has_obj();
      ::Protobuf::MessageOfMap* temp = obj_.messageofmap_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    obj_.messageofmap_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Protobuf::MessageOfMap& MessageToClient_GameObjMessage::_internal_messageofmap() const {
  return _internal_has_messageofmap()
      ? *obj_.messageofmap_
      : reinterpret_cast< ::Protobuf::MessageOfMap&>(::Protobuf::_MessageOfMap_default_instance_);
}
inline const ::Protobuf::MessageOfMap& MessageToClient_GameObjMessage::messageofmap() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageToClient.GameObjMessage.messageOfMap)
  return _internal_messageofmap();
}
inline ::Protobuf::MessageOfMap* MessageToClient_GameObjMessage::unsafe_arena_release_messageofmap() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Protobuf.MessageToClient.GameObjMessage.messageOfMap)
  if (_internal_has_messageofmap()) {
    clear_has_obj();
    ::Protobuf::MessageOfMap* temp = obj_.messageofmap_;
    obj_.messageofmap_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageToClient_GameObjMessage::unsafe_arena_set_allocated_messageofmap(::Protobuf::MessageOfMap* messageofmap) {
  clear_obj();
  if (messageofmap) {
    set_has_messageofmap();
    obj_.messageofmap_ = messageofmap;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Protobuf.MessageToClient.GameObjMessage.messageOfMap)
}
inline ::Protobuf::MessageOfMap* MessageToClient_GameObjMessage::_internal_mutable_messageofmap() {
  if (!_internal_has_messageofmap()) {
    clear_obj();
    set_has_messageofmap();
    obj_.messageofmap_ = CreateMaybeMessage< ::Protobuf::MessageOfMap >(GetArenaForAllocation());
  }
  return obj_.messageofmap_;
}
inline ::Protobuf::MessageOfMap* MessageToClient_GameObjMessage::mutable_messageofmap() {
  ::Protobuf::MessageOfMap* _msg = _internal_mutable_messageofmap();
  // @@protoc_insertion_point(field_mutable:Protobuf.MessageToClient.GameObjMessage.messageOfMap)
  return _msg;
}

// .Protobuf.MessageOfBombedBullet MessageOfBombedBullet = 5;
inline bool MessageToClient_GameObjMessage::_internal_has_messageofbombedbullet() const {
  return obj_case() == kMessageOfBombedBullet;
}
inline bool MessageToClient_GameObjMessage::has_messageofbombedbullet() const {
  return _internal_has_messageofbombedbullet();
}
inline void MessageToClient_GameObjMessage::set_has_messageofbombedbullet() {
  _oneof_case_[0] = kMessageOfBombedBullet;
}
inline void MessageToClient_GameObjMessage::clear_messageofbombedbullet() {
  if (_internal_has_messageofbombedbullet()) {
    if (GetArenaForAllocation() == nullptr) {
      delete obj_.messageofbombedbullet_;
    }
    clear_has_obj();
  }
}
inline ::Protobuf::MessageOfBombedBullet* MessageToClient_GameObjMessage::release_messageofbombedbullet() {
  // @@protoc_insertion_point(field_release:Protobuf.MessageToClient.GameObjMessage.MessageOfBombedBullet)
  if (_internal_has_messageofbombedbullet()) {
    clear_has_obj();
      ::Protobuf::MessageOfBombedBullet* temp = obj_.messageofbombedbullet_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    obj_.messageofbombedbullet_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Protobuf::MessageOfBombedBullet& MessageToClient_GameObjMessage::_internal_messageofbombedbullet() const {
  return _internal_has_messageofbombedbullet()
      ? *obj_.messageofbombedbullet_
      : reinterpret_cast< ::Protobuf::MessageOfBombedBullet&>(::Protobuf::_MessageOfBombedBullet_default_instance_);
}
inline const ::Protobuf::MessageOfBombedBullet& MessageToClient_GameObjMessage::messageofbombedbullet() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageToClient.GameObjMessage.MessageOfBombedBullet)
  return _internal_messageofbombedbullet();
}
inline ::Protobuf::MessageOfBombedBullet* MessageToClient_GameObjMessage::unsafe_arena_release_messageofbombedbullet() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Protobuf.MessageToClient.GameObjMessage.MessageOfBombedBullet)
  if (_internal_has_messageofbombedbullet()) {
    clear_has_obj();
    ::Protobuf::MessageOfBombedBullet* temp = obj_.messageofbombedbullet_;
    obj_.messageofbombedbullet_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageToClient_GameObjMessage::unsafe_arena_set_allocated_messageofbombedbullet(::Protobuf::MessageOfBombedBullet* messageofbombedbullet) {
  clear_obj();
  if (messageofbombedbullet) {
    set_has_messageofbombedbullet();
    obj_.messageofbombedbullet_ = messageofbombedbullet;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Protobuf.MessageToClient.GameObjMessage.MessageOfBombedBullet)
}
inline ::Protobuf::MessageOfBombedBullet* MessageToClient_GameObjMessage::_internal_mutable_messageofbombedbullet() {
  if (!_internal_has_messageofbombedbullet()) {
    clear_obj();
    set_has_messageofbombedbullet();
    obj_.messageofbombedbullet_ = CreateMaybeMessage< ::Protobuf::MessageOfBombedBullet >(GetArenaForAllocation());
  }
  return obj_.messageofbombedbullet_;
}
inline ::Protobuf::MessageOfBombedBullet* MessageToClient_GameObjMessage::mutable_messageofbombedbullet() {
  ::Protobuf::MessageOfBombedBullet* _msg = _internal_mutable_messageofbombedbullet();
  // @@protoc_insertion_point(field_mutable:Protobuf.MessageToClient.GameObjMessage.MessageOfBombedBullet)
  return _msg;
}

// .Protobuf.MessageOfPickedProp messageOfPickedProp = 6;
inline bool MessageToClient_GameObjMessage::_internal_has_messageofpickedprop() const {
  return obj_case() == kMessageOfPickedProp;
}
inline bool MessageToClient_GameObjMessage::has_messageofpickedprop() const {
  return _internal_has_messageofpickedprop();
}
inline void MessageToClient_GameObjMessage::set_has_messageofpickedprop() {
  _oneof_case_[0] = kMessageOfPickedProp;
}
inline void MessageToClient_GameObjMessage::clear_messageofpickedprop() {
  if (_internal_has_messageofpickedprop()) {
    if (GetArenaForAllocation() == nullptr) {
      delete obj_.messageofpickedprop_;
    }
    clear_has_obj();
  }
}
inline ::Protobuf::MessageOfPickedProp* MessageToClient_GameObjMessage::release_messageofpickedprop() {
  // @@protoc_insertion_point(field_release:Protobuf.MessageToClient.GameObjMessage.messageOfPickedProp)
  if (_internal_has_messageofpickedprop()) {
    clear_has_obj();
      ::Protobuf::MessageOfPickedProp* temp = obj_.messageofpickedprop_;
    if (GetArenaForAllocation() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    obj_.messageofpickedprop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Protobuf::MessageOfPickedProp& MessageToClient_GameObjMessage::_internal_messageofpickedprop() const {
  return _internal_has_messageofpickedprop()
      ? *obj_.messageofpickedprop_
      : reinterpret_cast< ::Protobuf::MessageOfPickedProp&>(::Protobuf::_MessageOfPickedProp_default_instance_);
}
inline const ::Protobuf::MessageOfPickedProp& MessageToClient_GameObjMessage::messageofpickedprop() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageToClient.GameObjMessage.messageOfPickedProp)
  return _internal_messageofpickedprop();
}
inline ::Protobuf::MessageOfPickedProp* MessageToClient_GameObjMessage::unsafe_arena_release_messageofpickedprop() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Protobuf.MessageToClient.GameObjMessage.messageOfPickedProp)
  if (_internal_has_messageofpickedprop()) {
    clear_has_obj();
    ::Protobuf::MessageOfPickedProp* temp = obj_.messageofpickedprop_;
    obj_.messageofpickedprop_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void MessageToClient_GameObjMessage::unsafe_arena_set_allocated_messageofpickedprop(::Protobuf::MessageOfPickedProp* messageofpickedprop) {
  clear_obj();
  if (messageofpickedprop) {
    set_has_messageofpickedprop();
    obj_.messageofpickedprop_ = messageofpickedprop;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Protobuf.MessageToClient.GameObjMessage.messageOfPickedProp)
}
inline ::Protobuf::MessageOfPickedProp* MessageToClient_GameObjMessage::_internal_mutable_messageofpickedprop() {
  if (!_internal_has_messageofpickedprop()) {
    clear_obj();
    set_has_messageofpickedprop();
    obj_.messageofpickedprop_ = CreateMaybeMessage< ::Protobuf::MessageOfPickedProp >(GetArenaForAllocation());
  }
  return obj_.messageofpickedprop_;
}
inline ::Protobuf::MessageOfPickedProp* MessageToClient_GameObjMessage::mutable_messageofpickedprop() {
  ::Protobuf::MessageOfPickedProp* _msg = _internal_mutable_messageofpickedprop();
  // @@protoc_insertion_point(field_mutable:Protobuf.MessageToClient.GameObjMessage.messageOfPickedProp)
  return _msg;
}

inline bool MessageToClient_GameObjMessage::has_obj() const {
  return obj_case() != OBJ_NOT_SET;
}
inline void MessageToClient_GameObjMessage::clear_has_obj() {
  _oneof_case_[0] = OBJ_NOT_SET;
}
inline MessageToClient_GameObjMessage::ObjCase MessageToClient_GameObjMessage::obj_case() const {
  return MessageToClient_GameObjMessage::ObjCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// MessageToClient

// repeated .Protobuf.MessageToClient.GameObjMessage gameObjMessage = 1;
inline int MessageToClient::_internal_gameobjmessage_size() const {
  return gameobjmessage_.size();
}
inline int MessageToClient::gameobjmessage_size() const {
  return _internal_gameobjmessage_size();
}
inline void MessageToClient::clear_gameobjmessage() {
  gameobjmessage_.Clear();
}
inline ::Protobuf::MessageToClient_GameObjMessage* MessageToClient::mutable_gameobjmessage(int index) {
  // @@protoc_insertion_point(field_mutable:Protobuf.MessageToClient.gameObjMessage)
  return gameobjmessage_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Protobuf::MessageToClient_GameObjMessage >*
MessageToClient::mutable_gameobjmessage() {
  // @@protoc_insertion_point(field_mutable_list:Protobuf.MessageToClient.gameObjMessage)
  return &gameobjmessage_;
}
inline const ::Protobuf::MessageToClient_GameObjMessage& MessageToClient::_internal_gameobjmessage(int index) const {
  return gameobjmessage_.Get(index);
}
inline const ::Protobuf::MessageToClient_GameObjMessage& MessageToClient::gameobjmessage(int index) const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageToClient.gameObjMessage)
  return _internal_gameobjmessage(index);
}
inline ::Protobuf::MessageToClient_GameObjMessage* MessageToClient::_internal_add_gameobjmessage() {
  return gameobjmessage_.Add();
}
inline ::Protobuf::MessageToClient_GameObjMessage* MessageToClient::add_gameobjmessage() {
  ::Protobuf::MessageToClient_GameObjMessage* _add = _internal_add_gameobjmessage();
  // @@protoc_insertion_point(field_add:Protobuf.MessageToClient.gameObjMessage)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Protobuf::MessageToClient_GameObjMessage >&
MessageToClient::gameobjmessage() const {
  // @@protoc_insertion_point(field_list:Protobuf.MessageToClient.gameObjMessage)
  return gameobjmessage_;
}

// .Protobuf.MessageType messageType = 2;
inline void MessageToClient::clear_messagetype() {
  messagetype_ = 0;
}
inline ::Protobuf::MessageType MessageToClient::_internal_messagetype() const {
  return static_cast< ::Protobuf::MessageType >(messagetype_);
}
inline ::Protobuf::MessageType MessageToClient::messagetype() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageToClient.messageType)
  return _internal_messagetype();
}
inline void MessageToClient::_internal_set_messagetype(::Protobuf::MessageType value) {
  
  messagetype_ = value;
}
inline void MessageToClient::set_messagetype(::Protobuf::MessageType value) {
  _internal_set_messagetype(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageToClient.messageType)
}

// -------------------------------------------------------------------

// MessageToOneClient

// int64 playerID = 1;
inline void MessageToOneClient::clear_playerid() {
  playerid_ = int64_t{0};
}
inline int64_t MessageToOneClient::_internal_playerid() const {
  return playerid_;
}
inline int64_t MessageToOneClient::playerid() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageToOneClient.playerID)
  return _internal_playerid();
}
inline void MessageToOneClient::_internal_set_playerid(int64_t value) {
  
  playerid_ = value;
}
inline void MessageToOneClient::set_playerid(int64_t value) {
  _internal_set_playerid(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageToOneClient.playerID)
}

// int64 teamID = 2;
inline void MessageToOneClient::clear_teamid() {
  teamid_ = int64_t{0};
}
inline int64_t MessageToOneClient::_internal_teamid() const {
  return teamid_;
}
inline int64_t MessageToOneClient::teamid() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageToOneClient.teamID)
  return _internal_teamid();
}
inline void MessageToOneClient::_internal_set_teamid(int64_t value) {
  
  teamid_ = value;
}
inline void MessageToOneClient::set_teamid(int64_t value) {
  _internal_set_teamid(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageToOneClient.teamID)
}

// .Protobuf.MessageType messageType = 3;
inline void MessageToOneClient::clear_messagetype() {
  messagetype_ = 0;
}
inline ::Protobuf::MessageType MessageToOneClient::_internal_messagetype() const {
  return static_cast< ::Protobuf::MessageType >(messagetype_);
}
inline ::Protobuf::MessageType MessageToOneClient::messagetype() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageToOneClient.messageType)
  return _internal_messagetype();
}
inline void MessageToOneClient::_internal_set_messagetype(::Protobuf::MessageType value) {
  
  messagetype_ = value;
}
inline void MessageToOneClient::set_messagetype(::Protobuf::MessageType value) {
  _internal_set_messagetype(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageToOneClient.messageType)
}

// int64 guid = 4;
inline void MessageToOneClient::clear_guid() {
  guid_ = int64_t{0};
}
inline int64_t MessageToOneClient::_internal_guid() const {
  return guid_;
}
inline int64_t MessageToOneClient::guid() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageToOneClient.guid)
  return _internal_guid();
}
inline void MessageToOneClient::_internal_set_guid(int64_t value) {
  
  guid_ = value;
}
inline void MessageToOneClient::set_guid(int64_t value) {
  _internal_set_guid(value);
  // @@protoc_insertion_point(field_set:Protobuf.MessageToOneClient.guid)
}

// string message = 5;
inline void MessageToOneClient::clear_message() {
  message_.ClearToEmpty();
}
inline const std::string& MessageToOneClient::message() const {
  // @@protoc_insertion_point(field_get:Protobuf.MessageToOneClient.message)
  return _internal_message();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void MessageToOneClient::set_message(ArgT0&& arg0, ArgT... args) {
 
 message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:Protobuf.MessageToOneClient.message)
}
inline std::string* MessageToOneClient::mutable_message() {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:Protobuf.MessageToOneClient.message)
  return _s;
}
inline const std::string& MessageToOneClient::_internal_message() const {
  return message_.Get();
}
inline void MessageToOneClient::_internal_set_message(const std::string& value) {
  
  message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* MessageToOneClient::_internal_mutable_message() {
  
  return message_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* MessageToOneClient::release_message() {
  // @@protoc_insertion_point(field_release:Protobuf.MessageToOneClient.message)
  return message_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void MessageToOneClient::set_allocated_message(std::string* message) {
  if (message != nullptr) {
    
  } else {
    
  }
  message_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), message,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (message_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    message_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:Protobuf.MessageToOneClient.message)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Protobuf

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Message2Clients_2eproto
