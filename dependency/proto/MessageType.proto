//MessageType
syntax = "proto3";
package Protobuf;
option csharp_namespace = "Communication.Proto";

enum MessageType
{
    AddPlayer = 0;
    Move = 1;
    Attack = 2;         //注：所有人物都用子弹攻击
    Pick = 3;
    Use = 4;
    Throw = 5;
    Send = 6;
    InvalidPlayer = 7;
    ValidPlayer = 8;
    StartGame = 9;
    Gaming = 10;
    EndGame = 11;
    UseCommonSkill = 12;   //使用CommonSkill
    UseUltimateSkill = 13;   //使用UltimateSkill。UltimateSkill极有可能不会有，即人物极有可能只有PassiveSkill和CommonSkill。
    InitialLized = 14;  //Server给Client发送初始化消息十分关键，因此这里用StartGame-MessageToInitialize-InitialLized三次握手确认该操作的成功。
}

enum GameObjType
{
    NullGameObjType = 0;
    Character = 1;
    Wall = 2;
    Prop = 3;
    Bullet = 4;
    BirthPoint = 5;
    OutOfBoundBlock = 6;
    Grass = 7;
}
enum ShapeType
{
    NullShapeType = 0;
    Circle = 1;     //仍然，子弹和人物为圆形，格子为方形
    Square = 2;
}
enum PlaceType  //位置标志，包括陆地，草丛，以及角色技能带来的隐身。游戏中每一帧都要刷新各个物体的该属性
{
    NullPlaceType = 0;
    Land = 1;
    Grass1 = 2;
    Grass2 = 3;
    Grass3 = 4;
    Invisible = 5;
}
enum PropType    // 道具的类型
{
    NullPropType = 0;
    addHP = 1;
    addAP = 2;
    addSpeed = 3;
    addLIFE = 4;
    minusCD = 5;
    Gem = 6;    // 新增：宝石
    Shield = 7;
    Spear = 8;
    minusSpeed = 9;
    minusAP = 10;
    addCD = 11;
}
enum PassiveSkillType   // 被动技能，有名字的都是已经实现了的
{
    NullPassiveSkillType = 0;
    RecoverAfterBattle = 1;
    SpeedUpWhenLeavingGrass = 2;
    Vampire = 3;
    PSkill3 = 4;
    PSkill4 = 5;
    PSkill5 = 6;
}
enum ActiveSkillType    // 主动技能，有名字的都是已经实现了的
{
    NullActiveSkillType = 0;
    BecomeVampire = 1;
    BecomeAssassin = 2;
    NuclearWeapon = 3;
    SuperFast = 4;
    ASkill4 = 5;
    ASkill5 = 6;
}
enum BuffType    //buff
{
    NullBuffType = 0;
    MoveSpeed = 1;
    AP = 2;
    CD = 3;
    AddLIFE = 4;
    ShieldBuff = 5;
    SpearBuff = 6;
}
enum BulletType  //会有不同类型的子弹，现在只实现了“原子弹”
{
    NullBulletType = 0;
    AtomBomb = 1;
    // ...
    // ...
    // ...
}
//先偷懒把枚举类型粘在这里